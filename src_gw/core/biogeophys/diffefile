44c44
<        max_glacier_snowd
---
>                                    max_glacier_snowd,ktau_gl,psi_c,psi_o
46,48c46
<   USE cbl_soil_snow_subrs_module, ONLY : trimb, snow_processes_soil_thermal
< 
<   USE cable_data_module, ONLY: igwhydro_type,point2constants
---
>    USE cable_soil_snow_module, ONLY : trimb, snow_processes_soil_thermal
49a48
>    USE cable_data_module, only: C=>PHYS!issnow_type,point2constants
55c54
<   TYPE(igwhydro_type), SAVE :: C
---
>    !TYPE(issnow_type), SAVE :: C
58d56
<   REAL(r_2), SAVE :: smp_cor = 8.0
66a65,68
>    REAL(r_2), PARAMETER :: m2mm = 1000.0
>    REAL(r_2), PARAMETER :: mm2m = 0.001
>    REAL(r_2), SAVE      :: den_rat=0.921
>    REAL(r_2), PARAMETER :: zero=0.0
68a71,81
>    abstract interface
>       subroutine swc_smp_func(soil,ssnow)
>         Import :: soil_parameter_type,soil_snow_type
>         type(soil_parameter_type) :: soil
>          type(soil_snow_type) :: ssnow
>       end subroutine
>    end interface
> 
>   procedure(swc_smp_func), pointer, save :: swc_smp_dsmpdw=>null()
> 
> 
73c86
<        pore_space_relative_humidity,set_unsed_gw_vars
---
>              pore_space_relative_humidity,set_unsed_gw_vars,den_rat,set_den_rat
80c93
<   SUBROUTINE GWsoilfreeze(dels, soil, ssnow,tgg_old)
---
> SUBROUTINE GWsoilfreeze(dels, soil, ssnow)
89,92c102,103
<     REAL, INTENT(INOUT), DIMENSION(mp,ms) :: tgg_old
<     REAL(r_2), DIMENSION(mp)           :: sicefreeze
<     REAL(r_2), DIMENSION(mp)           :: sicemelt
<     REAL(r_2), DIMENSION(mp,ms)        :: wbice_delta,avail_por
---
>    REAL     , DIMENSION(mp,ms)        :: tgg_tmp !calc wb ice at approx tgg
>    REAL(r_2), DIMENSION(mp,ms)        :: wbice_delta,avail_por,delta_ice_vol
95,96c106,111
<     REAL, DIMENSION(mp,ms) :: tgg_tmp
<     REAL(r_2),DIMENSION(mp,ms) :: xx,max_ice_frac,iceF,den_css  !Decker and Zeng 2009
---
>    REAL(r_2) :: func,funcderv,Aconst,Dconst,t_zero,t_one,dtmp
>    REAL, DIMENSION(mp,ms) :: gammzz_snow
>    REAL(r_2),DIMENSION(mp,ms) :: xx,max_ice_frac,den_css  !Decker and Zeng 2009 ! MMY iceF is useless
>    REAL(r_2) :: delta_wbliq,tmp_var
> 
>    !call point2constants( C )
98a114,124
>    delta_ice_vol(:,:) = 0.0
>    tgg_tmp(:,:) = ssnow%tgg(:,:)
>    gammzz_snow(:,:) = 0._r_2
> 
>    k=1
>    do i=1,mp
>       if (ssnow%isflag(i) .eq. 0 .and. soil%isoilm(i) .ne. 9) then
>            gammzz_snow(i,k) = real(C%cgsnow,r_2) * real(ssnow%snowd(i),r_2)
>       end if
>    end do
> 
101,104d126
<           IF  (ssnow%tgg(i,k) .LT. C%TFRZ .AND. soil%ssat_vec(i,k) .GT. 1.0e-8) THEN
<              max_ice_frac(i,k) = (1. - EXP(-2.*(ssnow%wb(i,k)/soil%ssat_vec(i,k))**4.0 *&
<                   (ssnow%tgg(i,k)-C%TFRZ)))/EXP(1. - ssnow%wb(i,k)/soil%ssat_vec(i,k))
<              max_ice_frac(i,k) = MAX(0.4,max_ice_frac(i,k))*ssnow%wb(i,k)
106c128,129
<              wbice_delta(i,k) = MAX(0.,max_ice_frac(i,k) - ssnow%wbice(i,k))
---
>       if ( (ssnow%tgg(i,k) .lt. C%TFRZ) .and. &
>           (ssnow%tgg(i,k) .lt. ssnow%otgg(i,k)) ) then ! MMY freezing
108,110c131
<              avail_por(i,k) = soil%ssat_vec(i,k) - ssnow%wbliq(i,k)+&
<                   C%density_ice/C%density_liq*wbice_delta(i,k) - &
<                   ssnow%wbice(i,k)
---
>             ssnow%otgg(i,k) = min(ssnow%otgg(i,k),C%TFRZ)
112c133,139
<              wbice_delta(i,k) = MIN(wbice_delta(i,k),avail_por(i,k))
---
>             ! ___________________ MMY not work at all ______________________
>             !if (ssnow%wb(i,k) .gt. 1.0e-4) then
>             !   iceF(i,k) = 1._r_2 - max(0.1_r_2,min(0.9_r_2,ssnow%wbliq(i,k)/max(ssnow%wb(i,k),1.0e-8)))
>             !else
>             !   iceF(i,k) = 0._r_2
>             !end if
>             ! __________________________________________________________________
114c141
<              max_ice_frac(i,k) = ssnow%wbice(i,k) + wbice_delta(i,k)
---
>             tgg_tmp(i,k) = ssnow%tgg(i,k)
116,118c143,144
<           ENDIF
<        END DO
<     END DO
---
>             Aconst = -2.0*( (0.2+ssnow%wb(i,k)/soil%ssat_vec(i,k))**4.0 )
>             Dconst = exp(1.  - min(1.0,0.2+ssnow%wb(i,k)/soil%ssat_vec(i,k)))
119a146,147
>             max_ice_frac(i,k) = (1._r_2 - exp(2._r_2*(min(1.,ssnow%wb(i,k)/soil%ssat_vec(i,k))**4.0) *&
>                           real(tgg_tmp(i,k)-C%TFRZ,r_2)))/exp(1._r_2- min(1.0,ssnow%wb(i,k)/soil%ssat_vec(i,k)))
121,138c149
<     tgg_tmp(:,:) = tgg_old(:,:)
<     DO k=1,ms
<        DO i=1,mp
<           IF (soil%isoilm(i) .EQ. 9) THEN
<              tgg_tmp(i,k) = C%TFRZ
<           ELSE
<              IF  (ssnow%tgg(i,k) .LE. C%TFRZ) THEN
<                 IF (tgg_old(i,k) .GT. C%TFRZ) THEN
<                    tgg_tmp(i,k) = C%TFRZ
<                 END IF
<              ELSE
<                 IF (tgg_old(i,k) .LE. C%TFRZ) THEN
<                    tgg_tmp(i,k) = C%TFRZ
<                 END IF
<              END IF
<           END IF
<        END DO
<     END DO
---
>             if (soil%isoilm(i) .eq. 9) max_ice_frac(i,k) = 0.85_r_2
139a151,152
>             ! MMY maximum ice can get under current wb
>             max_ice_frac(i,k) = min(0.9_r_2,max_ice_frac(i,k))
140a154,156
>             !delta_ice_vol(i,k) = max(0._r_2, ssnow%wb(i,k)*max_ice_frac(i,k) - ssnow%wbice(i,k)) ! MMY
>             ! MMY ssnow%wb(i,k)*max_ice_frac(i,k) here should be ice volume, thus divided by den_rat
>             delta_ice_vol(i,k) = max(0._r_2, ssnow%wb(i,k)*max_ice_frac(i,k)/den_rat - ssnow%wbice(i,k)) ! MMY
142,145c158,162
<     !allow more freezing for permenant glacier ice regions
<     DO i=1,mp
<        IF (soil%isoilm(i) .EQ. 9) max_ice_frac(i,:) = 0.85_r_2*ssnow%wb(i,:)
<     END DO
---
>             ! MMY wbliq can be lower than watr due to condensation, but to avoid large negative water potential
>             !     set watr as wbliq lower boundary
>             !check amount of water we have
>             delta_ice_vol(i,k) = min((ssnow%wbliq(i,k)-soil%watr(i,k))/den_rat, &
>                                  max(0._r_2, delta_ice_vol(i,k) ) )
147,148c164,166
<     DO k = 1, ms
<        DO i=1,mp
---
>             delta_ice_vol(i,k) = min(delta_ice_vol(i,k),max(0._r_2,&
>                                    real(ssnow%otgg(i,k)-ssnow%tgg(i,k),r_2)*ssnow%gammzz(i,k)/&
>                                      (soil%zse_vec(i,k)*real(C%HLF*C%density_ice,r_2)) ) )
150,152c168,169
<           ice_mass(i) = ssnow%wbice(i,k)*soil%zse_vec(i,k)*REAL(C%density_ice,r_2)
<           liq_mass(i) = ssnow%wbliq(i,k)*soil%zse_vec(i,k)*REAL(C%density_liq,r_2)
<           tot_mass(i) = liq_mass(i) + ice_mass(i)
---
>       elseif ((ssnow%tgg(i,k) .gt. C%TFRZ) .and. &
>               (ssnow%tgg(i,k) .gt. ssnow%otgg(i,k)) .and. ssnow%wbice(i,k) .gt.  0.0) then ! MMY melting
154,156c171
<           IF (ssnow%tgg(i,k) .LE. C%TFRZ .AND. &
<                ssnow%tgg(i,k) .LT. tgg_tmp(i,k) .AND. &
<                max_ice_frac(i,k) - ssnow%wbice(i,k) > .001) THEN
---
>               ssnow%otgg(i,k) = C%TFRZ
158,160c173
<              sicefreeze(i) = MIN( MAX( 0.0_r_2, ( max_ice_frac(i,k)  -      &
<                   ssnow%wbice(i,k) ) ) * soil%zse_vec(i,k) * C%density_ice,             &
<                   ( tgg_tmp(i,k) - ssnow%tgg(i,k) ) * ssnow%gammzz(i,k) / C%hlf )
---
>              delta_ice_vol(i,k) = ssnow%wbice(i,k)
162,169c175,177
<              ssnow%wbice(i,k) = MIN( ssnow%wbice(i,k) +&
<                   sicefreeze(i)/soil%zse_vec(i,k)/C%density_ice,&
<                   max_ice_frac(i,k) )
<              ssnow%gammzz(i,k) = MAX(soil%heat_cap_lower_limit(i,k),  &
<                   (1.0-soil%ssat_vec(i,k))*soil%css_vec(i,k)*soil%rhosoil_vec(i,k) &
<                   + (ssnow%wb(i,k)-ssnow%wbice(i,k)) * REAL(C%cs_rho_wat,r_2)   &
<                   + ssnow%wbice(i,k) * REAL(C%cs_rho_ice,r_2)&
<                   )*soil%zse_vec(i,k)
---
>              delta_ice_vol(i,k) = min(delta_ice_vol(i,k), max(0._r_2,&
>                                   real(ssnow%tgg(i,k)-ssnow%otgg(i,k),r_2) * ssnow%gammzz(i,k) /&
>                                      (soil%zse_vec(i,k)*real(C%HLF*C%density_ice,r_2)) ) )
171,172d178
<              IF (k .EQ. 1 .AND. ssnow%isflag(i) .EQ. 0) THEN
<                 ssnow%gammzz(i,k) = ssnow%gammzz(i,k) + C%cgsnow * ssnow%snowd(i)
173a180,181
>    end do
>    end do
175,179c183,184
<              ssnow%tgg(i,k) = ssnow%tgg(i,k) + REAL(sicefreeze(i))                    &
<                   * C%hlf / REAL(ssnow%gammzz(i,k) )
< 
<           ELSEIF ( ssnow%tgg(i,k) .GT. tgg_tmp(i,k) .AND. &
<                ssnow%wbice(i,k) .GT.  max_ice_frac(i,k) ) THEN
---
>    DO k = 1, ms
>       DO i=1,mp
181,182c186,187
<              sicemelt(i) = MIN( ssnow%wbice(i,k) * soil%zse_vec(i,k) * C%density_ice,              &
<                   ( ssnow%tgg(i,k) - tgg_tmp(i,k) ) * ssnow%gammzz(i,k) / C%hlf )
---
>           if ( (ssnow%tgg(i,k) .lt. C%TFRZ) .and. &
>                (delta_ice_vol(i,k) .gt. 0.0)  ) then
184,185c189,190
<              ssnow%wbice(i,k) = MAX( 0.0_r_2, ssnow%wbice(i,k) - sicemelt(i)          &
<                   / (soil%zse_vec(i,k) * C%density_ice) )
---
>             ssnow%wbice(i,k) = ssnow%wbice(i,k) + delta_ice_vol(i,k)
>             ssnow%wbliq(i,k) = ssnow%wbliq(i,k) - delta_ice_vol(i,k)*den_rat
189,200c194,200
<                   + (ssnow%wb(i,k)-ssnow%wbice(i,k)) * REAL(C%cs_rho_wat,r_2)   &
<                   + ssnow%wbice(i,k) * REAL(C%cs_rho_ice,r_2)&
<                   )*soil%zse_vec(i,k)
< 
<              IF (k .EQ. 1 .AND. ssnow%isflag(i) .EQ. 0) THEN
<                 ssnow%gammzz(i,k) = ssnow%gammzz(i,k) + C%cgsnow * ssnow%snowd(i)
<              END IF
<              ssnow%tgg(i,k) = ssnow%tgg(i,k) - REAL(sicemelt(i))                     &
<                   * C%hlf / REAL(ssnow%gammzz(i,k))
<              !if for some reason end up here
<           ELSEIF( tgg_tmp(i,k) .GE. C%TFRZ .AND. &
<                ssnow%tgg(i,k) > tgg_tmp(i,k) .AND. ssnow%wbice(i,k) > 0. ) THEN
---
>                             + ssnow%wbliq(i,k) * REAL(C%cswat*C%density_liq,r_2)   &
>                             + ssnow%wbice(i,k) * REAL(C%csice*C%density_ice,r_2)&
>                             )*soil%zse_vec(i,k)  + gammzz_snow(i,k)
> 
>             ! MMY freezing releases heat
>             ssnow%tgg(i,k) = ssnow%tgg(i,k) + real( delta_ice_vol(i,k)*soil%zse_vec(i,k)  *&
>                                        real(C%hlf*C%density_ice,r_2) / ssnow%gammzz(i,k) )
202,203d201
<              sicemelt(i) = MIN( ssnow%wbice(i,k) * soil%zse_vec(i,k) * C%density_ice,              &
<                   ( ssnow%tgg(i,k) - tgg_tmp(i,k) ) * ssnow%gammzz(i,k) / C%hlf )
205,206c203,215
<              ssnow%wbice(i,k) = MAX( 0.0_r_2, ssnow%wbice(i,k) - sicemelt(i)          &
<                   / (soil%zse_vec(i,k) * C%density_ice) )
---
>             ssnow%wb(i,k) = ssnow%wbliq(i,k) + den_rat*ssnow%wbice(i,k)
> 
>             ssnow%wmliq(i,k) = ssnow%wbliq(i,k)*soil%zse_vec(i,k)*C%density_liq
>             ssnow%wmice(i,k) = ssnow%wbice(i,k)*soil%zse_vec(i,k)*C%density_ice
>             ssnow%wmtot(i,k) = ssnow%wb(i,k)   *soil%zse_vec(i,k)*C%density_liq
> 
>           elseif ((ssnow%tgg(i,k) .gt. C%TFRZ) .and. &
>               delta_ice_vol(i,k) .gt. 0.0 ) then ! MMY
>             ! ssnow%wbice(i,k) .gt. 0.0 ) then ! MMY It's not right.
>             ! MMY When previous tgg > current tgg > 0, wbice won't melt
> 
>             ssnow%wbice(i,k) = ssnow%wbice(i,k)  -  delta_ice_vol(i,k)
>             ssnow%wbliq(i,k) = ssnow%wbliq(i,k)  +  delta_ice_vol(i,k)*den_rat
210,226c219,233
<                   + (ssnow%wb(i,k)-ssnow%wbice(i,k)) * REAL(C%cs_rho_wat,r_2)   &
<                   + ssnow%wbice(i,k) * REAL(C%cs_rho_ice,r_2)&
<                   )*soil%zse_vec(i,k)
< 
<              IF (k .EQ. 1 .AND. ssnow%isflag(i) .EQ. 0) THEN
<                 ssnow%gammzz(i,k) = ssnow%gammzz(i,k) + C%cgsnow * ssnow%snowd(i)
<              END IF
<              ssnow%tgg(i,k) = ssnow%tgg(i,k) - REAL(sicemelt(i))                     &
<                   * C%hlf / REAL(ssnow%gammzz(i,k))
< 
<           END IF
<           !update the liq and ice volume and mass
<           ice_mass(i)   = ssnow%wbice(i,k)*soil%zse_vec(i,k)*REAL(C%density_ice,r_2)
<           liq_mass(i)   = tot_mass(i) - ice_mass(i)
<           ssnow%wbliq(i,k) = liq_mass(i) / soil%zse_vec(i,k)/REAL(C%density_liq,r_2)
<           ssnow%wbice(i,k) = ice_mass(i) / soil%zse_vec(i,k)/REAL(C%density_ice,r_2)
<           ssnow%wb(i,k)    = ssnow%wbliq(i,k) + ssnow%wbice(i,k)
---
>                             + ssnow%wbliq(i,k) * REAL(C%cswat*C%density_liq,r_2)   &
>                             + ssnow%wbice(i,k) * REAL(C%csice*C%density_ice,r_2)&
>                             )*soil%zse_vec(i,k)  + gammzz_snow(i,k)
> 
>             ! MMY melting absorbs heat
>             ssnow%tgg(i,k) = ssnow%tgg(i,k) - real( delta_ice_vol(i,k)*soil%zse_vec(i,k)  *&
>                                           real(C%hlf*C%density_ice,r_2) / ssnow%gammzz(i,k) )
> 
>             ssnow%wb(i,k) = ssnow%wbliq(i,k) + den_rat*ssnow%wbice(i,k)
> 
>             ssnow%wmliq(i,k) = ssnow%wbliq(i,k)*soil%zse_vec(i,k)*C%density_liq
>             ssnow%wmice(i,k) = ssnow%wbice(i,k)*soil%zse_vec(i,k)*C%density_ice
>             ssnow%wmtot(i,k) = ssnow%wb(i,k)   *soil%zse_vec(i,k)*C%density_liq
>           END IF
> 
296c303
<           ssnow%wbliq(:,k) = ssnow%wbliq(:,k) - ssnow%evapfbl(:,k)/zse_mp_mm(:,k)
---
>         ssnow%wbliq(:,k) = ssnow%wbliq(:,k) - ssnow%evapfbl(:,k)/(soil%zse_vec(:,k)*m2mm)
305c312
<           ssnow%wb(i,k)    = ssnow%wbliq(i,k) + ssnow%wbice(i,k)  !volume
---
>         ssnow%wb(i,k)    = ssnow%wbliq(i,k) + den_rat * ssnow%wbice(i,k)  !volume
311,314c318,321
< 
< 
< !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
< 
---
> !
> !
> !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
> !
344c351
<     dzmm = 1000._r_2 * soil%zse(1)
---
>    dzmm = m2mm * soil%zse(1)
357,359c364,366
<        efpor(i) = MAX(0.001_r_2, soil%ssat_vec(i,1) - ssnow%wbice(i,1))
<        icemass  = ssnow%wbice(i,1) * dzmm
<        liqmass  = (ssnow%wb(i,1)-ssnow%wbice(i,1)) * dzmm
---
>       efpor(i) = max(0.01_r_2, soil%ssat_vec(i,1) - den_rat*ssnow%wbice(i,1))
>       icemass  = ssnow%wmice(i,1)
>       liqmass  = ssnow%wmliq(i,1)
361c368
<        icef(i)     = MAX(0._r_2,MIN(1._r_2,gw_params%IceBeta*icemass / totmass))
---
>       icef(i)     = max(0._r_2,min(1._r_2,icemass / totmass))
366c373
<     !call saturated_fraction(ssnow,soil,veg)
---
>    call saturated_fraction(ssnow,soil,veg)
378,379c385,386
<        tmpa = -2._r_2*soil%bch_vec(i,1)*soil%sucs_vec(i,1)/dzmm
<        qinmax = (1._r_2 + tmpa*(tmpb-1._r_2))*soil%hyds_vec(i,1)*EXP(-gw_params%hkrz*(0.5*dzmm/1000.0_r_2-gw_params%zdepth))
---
>       tmpa = -2._r_2*soil%bch_vec(i,1)*soil%sucs_vec(i,1)/soil%zse_vec(i,1)/m2mm
>       qinmax = (1._r_2 + tmpa*(tmpb-1._r_2))*soil%hyds_vec(i,1)
399c406
<     IF (sli_call .OR. cable_runtime%UM) THEN
---
>    if (sli_call .or. cable_runtime%UM .or. cable_user%gw_model) then
466,467c473,474
<           wmean(i) = wmean(i) + stot(i,k)*soil%zse(k)*1000._r_2
<           ztot(i)  = ztot(i) + soil%zse(k)*1000._r_2
---
>         wmean(i) = wmean(i) + stot(i,k)*soil%zse(k)*m2mm
>         ztot(i)  = ztot(i) + soil%zse(k)*m2mm
472,473c479,480
<        wmean(i) = wmean(i) + ssnow%GWwb(i)/soil%GWssat_vec(i) * soil%GWdz(i)*1000._r_2
<        ztot(i)  = ztot(i) + soil%GWdz(i)*1000._r_2
---
>      wmean(i) = wmean(i) + ssnow%GWwb(i)/soil%GWssat_vec(i) * soil%GWdz(i)*m2mm
>      ztot(i)  = ztot(i) + soil%GWdz(i)*m2mm
501,504c508,509
<     REAL(r_2), DIMENSION(mp,ms)   :: dzmm_mp,tmp_def
<     REAL(r_2), DIMENSION(0:ms)    :: zimm
<     REAL(r_2), DIMENSION(ms)      :: zmm
<     REAL(r_2), DIMENSION(mp)      :: GWzimm,temp
---
>   REAL(r_2), DIMENSION(mp,ms)   :: tmp_def
>   REAL(r_2), DIMENSION(mp)      :: temp
506d510
< 
508c512
<     REAL(r_2), DIMENSION(mp)      :: invB,Nsucs_vec  !inverse of C&H B,Nsucs_vec
---
>   REAL(r_2), DIMENSION(mp)      :: lam,Nsucs_vec  !inverse of C&H B,Nsucs_vec
512,522c516,517
<     invB     = 1._r_2/soil%bch_vec(:,ms)                                !1 over C&H B
<     Nsucs_vec  = soil%sucs_vec(:,ms)                                !psi_saturated mm
<     dzmm_mp  = REAL(SPREAD((soil%zse(:)) * 1000.0,1,mp),r_2)    !layer thickness mm
<     zimm(0)  = 0.0_r_2                                          !depth of layer interfaces mm
< 
<     !total depth of soil column
<     DO k=1,ms
<        zimm(k) = zimm(k-1) + soil%zse(k)*1000._r_2
<     END DO
< 
<     def(:) = 0._r_2
---
>   lam(:)        = 1._r_2/soil%bch_vec(:,ms)                                !1 over C&H B
>   Nsucs_vec(:)  = abs(soil%sucs_vec(:,ms))                                !psi_saturated mm
527,528c522,523
<           total_depth_column(i) = zimm(ms) + soil%GWdz(i)*1000._r_2
<           def(i) = def(i) + MAX(0._r_2,soil%GWssat_vec(i)-ssnow%GWwb(i))*soil%GWdz(i)*1000._r_2
---
>         total_depth_column(i) = soil%GWdz(i)*m2mm
>         def(i) = max(0._r_2,soil%GWssat_vec(i)-ssnow%GWwb(i))*soil%GWdz(i)*m2mm
530a526,528
>   else
>      def(:) = 0._r_2
>      total_depth_column(:) = 0._r_2
532a531,537
>   !total depth of soil column
>   do k=1,ms
>      do i=1,mp
>          total_depth_column(i) = total_depth_column(i) + soil%zse_vec(i,k)*m2mm
>      end do
>   end do
> 
538c543
<                MAX(0._r_2,(soil%ssat_vec(i,k)-(ssnow%wbliq(i,k)+ssnow%wbice(i,k)))*dzmm_mp(i,k))
---
>                 max(0._r_2,(soil%ssat_vec(i,k)-(ssnow%wbliq(i,k)+den_rat*ssnow%wbice(i,k)))*soil%zse_vec(i,k)*m2mm)
544,545c549,550
<        defc(i) = (soil%ssat_vec(i,ms))*(total_depth_column(i)+Nsucs_vec(i)/(1._r_2-invB(i))*            &
<             (1._r_2-((Nsucs_vec(i)+total_depth_column(i))/Nsucs_vec(i))**(1._r_2-invB(i))))
---
>      defc(i) = (soil%ssat_vec(i,ms))*(total_depth_column(i)+Nsucs_vec(i)/(1._r_2-lam(i))*            &
>              (1._r_2-((Nsucs_vec(i)+total_depth_column(i))/Nsucs_vec(i))**(1._r_2-lam(i))))
546a552
>   end do
550,551d555
<     END DO
< 
565c569
<                 tempb   = (1._r_2+ssnow%wtd(i)/Nsucs_vec(i))**(-invB(i))
---
>           tempb   = (1._r_2+ssnow%wtd(i)/Nsucs_vec(i))**(-lam(i))
572c576
<                 tempb   = (1._r_2+ssnow%wtd(i)/Nsucs_vec(i))**(1._r_2-invB(i))
---
>           tempb   = (1._r_2+ssnow%wtd(i)/Nsucs_vec(i))**(1._r_2-lam(i))
574c578
<                      Nsucs_vec(i)/(1-invB(i))* &
---
>                            Nsucs_vec(i)/(1-lam(i))* &
603,604c607,608
<                 tempa    = (ABS(tmpc/Nsucs_vec(i)))**(-invB(i))
<                 tempb    = (1._r_2+ssnow%wtd(i)/Nsucs_vec(i))**(-invB(i))
---
>           tempa    = (abs(tmpc/Nsucs_vec(i)))**(-lam(i))
>           tempb    = (1._r_2+ssnow%wtd(i)/Nsucs_vec(i))**(-lam(i))
608,609c612,613
<                 tempa    = (ABS((Nsucs_vec(i)+ssnow%wtd(i)-total_depth_column(i))/Nsucs_vec(i)))**(1._r_2-invB(i))
<                 tempb    = (1._r_2+ssnow%wtd(i)/Nsucs_vec(i))**(1._r_2-invB(i))
---
>           tempa    = (abs((Nsucs_vec(i)+ssnow%wtd(i)-total_depth_column(i))/Nsucs_vec(i)))**(1._r_2-lam(i))
>           tempb    = (1._r_2+ssnow%wtd(i)/Nsucs_vec(i))**(1._r_2-lam(i))
611c615
<                      Nsucs_vec(i)/(1._r_2-invB(i))*(tempa-tempb))-def(i)
---
>                      Nsucs_vec(i)/(1._r_2-lam(i))*(tempa-tempb))-def(i)
688,691c692,693
<     REAL(r_2), DIMENSION(ms)            :: dzmm
<     REAL(r_2), DIMENSION(mp,ms)         :: dzmm_mp
<     REAL(r_2), DIMENSION(0:ms+1)        :: zimm
<     REAL(r_2), DIMENSION(ms)            :: zmm
---
>     REAL(r_2), DIMENSION(mp,0:ms+1)        :: zimm
>     REAL(r_2), DIMENSION(mp,ms)            :: zmm
699,705c701
<     !make code cleaner define these here
<     dzmm(:) = 1000.0_r_2 * REAL(soil%zse(:),r_2)
<     DO i=1,mp
<        dzmm_mp(i,:) = dzmm(:)
<     END DO
< 
<     zimm(0) = 0._r_2
---
>     zimm(:,0) = 0._r_2
707c703
<        zimm(k) = zimm(k-1) + dzmm(k)
---
>        zimm(:,k) = zimm(:,k-1) + soil%zse_vec(:,k)*m2mm
709c705
<     zmm(1:ms)  = zimm(0:(ms-1)) + 0.5_r_2*dzmm(1:ms)
---
>     zmm(:,1:ms)  = zimm(:,1:ms) - 0.5*soil%zse_vec(:,1:ms)*m2mm
712,714c708,709
<        GWdzmm(i) = REAL(soil%GWdz(i),r_2)*1000._r_2
<        GWzimm(i) = zimm(ms)+GWdzmm(i)
<        zaq(i)    = zimm(ms) + 0.5_r_2*GWdzmm(i)
---
>        GWzimm(i) = zimm(i,ms)+soil%GWdz(i)*m2mm
>        zaq(i)    = zimm(i,ms) + 0.5_r_2*soil%GWdz(i)*m2mm
728a724,726
>     !soil hydraulic state/props
>     CALL calc_soil_hydraulic_props(ssnow,soil,veg)
> 
732,734c730
<     CALL calc_soil_hydraulic_props(ssnow,soil,veg)
< 
<     CALL subsurface_drainage(ssnow,soil,veg,dzmm)
---
>     CALL subsurface_drainage(ssnow,soil,veg)
739c735
<        den(i)     = (zmm(k+1)-zmm(k))
---
>        den(i)     = 0.5*(soil%zse_vec(i,k)+soil%zse_vec(i,k+1) )*m2mm
747c743
<        bt(i,k) =  dzmm(k)/dels + dqodw1(i)
---
>        bt(i,k) =  m2mm*soil%zse_vec(i,k)/dels + dqodw1(i)
752c748
<           den(i)     = (zmm(k) - zmm(k-1))
---
>           den(i)     = 0.5*(soil%zse_vec(i,k)+soil%zse_vec(i,k-1) )*m2mm
758c754
<           den(i)     = (zmm(k+1)-zmm(k))
---
>           den(i)     = 0.5*(soil%zse_vec(i,k)+soil%zse_vec(i,k+1) )*m2mm
766c762,763
<           bt(i,k) =  dzmm(k)/dels - dqidw1(i) + dqodw1(i)
---
>           bt(i,k) =  m2mm*soil%zse_vec(i,k)/dels - dqidw1(i) + dqodw1(i)
>           ! MMY ??? why the sign od bt is different to CLM5's
773c770
<        den(i)     = (zmm(k) - zmm(k-1))
---
>        den(i)     = 0.5*(soil%zse_vec(i,k)+soil%zse_vec(i,k-1) )*m2mm
779c776
<        den(i)     = zaq(i) - zmm(k)
---
>        den(i)     = zaq(i) - zmm(i,k)
787c784
<        bt(i,k) =  dzmm(k)/dels - dqidw1(i) + dqodw1(i)
---
>        bt(i,k) =  m2mm*soil%zse_vec(i,k)/dels - dqidw1(i) + dqodw1(i)
791c788
<     CALL aquifer_recharge(dels,ssnow,soil,veg,zaq,zmm,dzmm)
---
>     CALL aquifer_recharge(dels,ssnow,soil,veg)
797c794
<           ssnow%wbliq(i,k) = ssnow%wbliq(i,k) + rt(i,k) - ssnow%qhlev(i,k)*dels/dzmm(k)   !volutermic liquid
---
>           ssnow%wbliq(i,k) = ssnow%wbliq(i,k) + rt(i,k) - ssnow%qhlev(i,k)*dels/(m2mm*soil%zse_vec(i,k))   !volutermic liquid
802c799
<        ssnow%wbliq(i,ms) = ssnow%wbliq(i,ms) - ssnow%Qrecharge(i)*dels/dzmm(ms)
---
>        ssnow%wbliq(i,ms) = ssnow%wbliq(i,ms) - ssnow%Qrecharge(i)*dels/(m2mm*soil%zse_vec(i,ms))
805c802
<        ssnow%GWwb(i) = ssnow%GWwb(i)  +  (ssnow%Qrecharge(i)-ssnow%qhlev(i,ms+1))*dels/GWdzmm(i)
---
>        ssnow%GWwb(i) = ssnow%GWwb(i)  +  (ssnow%Qrecharge(i)-ssnow%qhlev(i,ms+1))*dels/(m2mm*soil%GWdz(i))
812c809
<           eff_por(i,k)  = MAX(0._r_2, soil%ssat_vec(i,k) - ssnow%wbice(i,k) )
---
>           eff_por(i,k)  = max(0._r_2, soil%ssat_vec(i,k) - den_rat * ssnow%wbice(i,k) )
820c817
<           xsi = (ssnow%GWwb(i) - soil%GWssat_vec(i))*GWdzmm(i)
---
>           xsi = (ssnow%GWwb(i) - soil%GWssat_vec(i))*m2mm*soil%GWdz(i)
826c823
<              xsi = xsi + (ssnow%wbliq(i,k) - eff_por(i,k))*dzmm(k)
---
>              xsi = xsi + (ssnow%wbliq(i,k) - eff_por(i,k))*(m2mm*soil%zse_vec(i,k))
833,834c830,831
<              IF (xsi .LT. (eff_por(i,k)-ssnow%wbliq(i,k))*dzmm(k)) THEN
<                 ssnow%wbliq(i,k) = ssnow%wbliq(i,k) + xsi/dzmm(k)
---
>              if (xsi .lt. (eff_por(i,k)-ssnow%wbliq(i,k))*(m2mm*soil%zse_vec(i,k))) then
>                 ssnow%wbliq(i,k) = ssnow%wbliq(i,k) + xsi/(m2mm*soil%zse_vec(i,k))
837c834
<                 xsi = xsi - (eff_por(i,k) - ssnow%wbliq(i,k))*dzmm(k)
---
>                 xsi = xsi - (eff_por(i,k) - ssnow%wbliq(i,k))*(m2mm*soil%zse_vec(i,k))
847a845,865
>        ! __________________________________ MMY ________________________________
>        ! do k = 1,ms
>        !    xsi = 0._r_2             !should be a single float (array not needed)
>        !    if (ssnow%wbliq(i,k) .lt. volwatmin) then
>        !       xsi = (volwatmin - ssnow%wbliq(i,k))*(m2mm*soil%zse_vec(i,k))  !in mm
>        !       ssnow%wbliq(i,k) = volwatmin
>        !       if (k .lt. ms) then
>        !          ssnow%wbliq(i,k+1) = ssnow%wbliq(i,k+1) - xsi/(m2mm*soil%zse_vec(i,k+1))
>        !       else
>        !          ssnow%GWwb(i) = ssnow%GWwb(i) - xsi / (m2mm*soil%GWdz(i))
>        !       end if
>        !    end if
>        ! end do  !ms loop
>        !
>        ! if ( (ssnow%GWwb(i) .lt. volwatmin) .and. (soil%isoilm(i) .ne. 9) ) then
>        !    xsi = (volwatmin - ssnow%GWwb(i)) / (m2mm*soil%GWdz(i))  !mm
>        !    ssnow%GWwb(i) = volwatmin
>        !    ssnow%qhz(i) = ssnow%qhz(i) - xsi / dels
>        ! end if
> 
>        ! MMY use watr to replace volwatmin to avoid questionable smp or hk (when wbliq<watr)
850,852c868,870
<           IF (ssnow%wbliq(i,k) .LT. volwatmin) THEN
<              xsi = (volwatmin - ssnow%wbliq(i,k))*dzmm(k)  !in mm
<              ssnow%wbliq(i,k) = volwatmin
---
>           if (ssnow%wbliq(i,k) .lt. soil%watr(i,k)) then         ! MMY
>              xsi = (soil%watr(i,k) - ssnow%wbliq(i,k))*(m2mm*soil%zse_vec(i,k)) ! MMY
>              ssnow%wbliq(i,k) = soil%watr(i,k)   ! MMY
854c872
<                 ssnow%wbliq(i,k+1) = ssnow%wbliq(i,k+1) - xsi/dzmm(k+1)
---
>                 ssnow%wbliq(i,k+1) = ssnow%wbliq(i,k+1) - xsi/(m2mm*soil%zse_vec(i,k+1))
856c874
<                 ssnow%GWwb(i) = ssnow%GWwb(i) - xsi / GWdzmm(i)
---
>                 ssnow%GWwb(i) = ssnow%GWwb(i) - xsi / (m2mm*soil%GWdz(i))
861,863c879,881
<        IF ( (ssnow%GWwb(i) .LT. volwatmin) .AND. (soil%isoilm(i) .NE. 9) ) THEN
<           xsi = (volwatmin - ssnow%GWwb(i)) / GWdzmm(i)  !mm
<           ssnow%GWwb(i) = volwatmin
---
>        if ( (ssnow%GWwb(i) .lt. soil%GWwatr(i)) .and. (soil%isoilm(i) .ne. 9) ) then ! MMY
>           xsi = (soil%GWwatr(i) - ssnow%GWwb(i)) / (m2mm*soil%GWdz(i))  !mm ! MMY
>           ssnow%GWwb(i) = soil%GWwatr(i) ! MMY
864a883
>           if (ssnow%qhz(i) .lt. 0.) print *, " MMY ===> Soil is too dry, found in SUBROUTINE smoistgw"
866c885
< 
---
>        ! _______________________________________________________________________
874c893
<                soil%zse_vec(i,k)*C%density_liq
---
>                                          soil%zse_vec(i,k)*real(C%density_liq,r_2)
876,877c895,896
<                soil%zse_vec(i,k)*C%density_ice
<           ssnow%wb(i,k)         = ssnow%wbliq(i,k) + ssnow%wbice(i,k)
---
>                                          soil%zse_vec(i,k)*real(C%density_ice,r_2)
>          ssnow%wb(i,k)         = ssnow%wbliq(i,k) + den_rat * ssnow%wbice(i,k)
905c924
<     USE cable_IO_vars_module, ONLY: wlogn
---
>    !USE cable_IO_vars_module, ONLY: wlogn
919d937
<     REAL, DIMENSION(mp,ms) :: tgg_old
921a940
>    REAL(r_2), DIMENSION(mp,ms) :: gammzz_snow
935c954
<     CALL point2constants( C )
---
>    !CALL point2constants( C )
938d956
< 
940d957
< 
942a960,969
>    if (first_gw_hydro_call) then
>       call set_den_rat()
>       ! ____________________________ MMY _____________________________
>       ! check wb wbice when first_gw_hydro_call = true
>       DO k = 1, ms
>           ssnow%wb(:,k)    = MIN(soil%ssat_vec(:,k), MAX(real(ssnow%wb(:,k)), soil%watr(:,k)))
>           ssnow%wbice(:,k) = MIN(real(ssnow%wb(:,k))/den_rat, real(ssnow%wbice(:,k)))
>       END DO
>       ! ______________________________________________________________
>    end if
945a973
>    ssnow%otgg = ssnow%tgg
962c990
<        soil%heat_cap_lower_limit(:,:) = 0.01  !never allow /0
---
>       soil%heat_cap_lower_limit(:,:) = 0._r_2  !allow /0 to show bugs
970,1000d997
<        ! after discussion with BP
<        ! N.B. snmin should exceed sum of layer depths, i.e. .11 m
<        ssnow%wbtot = 0.0
<        ssnow%wb(:,:)  = MIN( soil%ssat_vec(:,:), MAX ( ssnow%wb(:,:), 0.5*soil%swilt_vec(:,:) ) )
< 
<        DO k = 1, ms
< 
<           WHERE( ssnow%tgg(:,k) <= C%TFRZ .AND. ssnow%wbice(:,k) <= 0.001*ssnow%wb(:,k) )   &
<                ssnow%wbice(:,k) = 0.5 * ssnow%wb(:,k)
< 
<           !WHERE( ssnow%tgg(:,k) < C%TFRZ)                                    &
<           !   ssnow%wbice(:,k) = 0.8 * ssnow%wb(:,k)
< 
<        END DO
< 
<        WHERE ( soil%isoilm .EQ. 9)! .and. ssnow%snowd .le. 0.1*max_glacier_snowd)
< 
<           ! permanent ice: fix hard-wired number in next version
<           ssnow%snowd = max_glacier_snowd
<           ssnow%osnowd = max_glacier_snowd
<           ssnow%tgg(:,1) = ssnow%tgg(:,1) - 1.0
< 
<        END WHERE
< 
<        WHERE ( SPREAD(soil%isoilm,2,ms) .EQ. 9 )
< 
<           ssnow%wb    = 0.95 * soil%ssat_vec
<           ssnow%wbice = 0.95 * ssnow%wb
< 
<        END WHERE
< 
1003,1004c1000,1003
< 
<     tgg_old = ssnow%tgg
---
>    gammzz_snow(:,:) = 0._r_2
>    do i=1,mp
>       gammzz_snow(i,1) = real((1. - ssnow%isflag(i)) * C%cgsnow * ssnow%snowd(i),r_2)
>    end do
1010,1012c1009,1011
<           ssnow%wbliq(i,k) = ssnow%wb(i,k) - ssnow%wbice(i,k)                     !liquid volume
<           ssnow%wmice(i,k) = ssnow%wbice(i,k)*REAL(C%density_ice*soil%zse(k),r_2) !ice mass
<           ssnow%wmliq(i,k) = ssnow%wbliq(i,k)*REAL(C%density_liq*soil%zse(k),r_2) !liquid mass
---
>          ssnow%wbliq(i,k) = ssnow%wb(i,k) - den_rat*ssnow%wbice(i,k)  ! MMY      !liquid volume
>          ssnow%wmice(i,k) = ssnow%wbice(i,k)*real(C%density_ice,r_2)*soil%zse_vec(i,k)!ice mass
>          ssnow%wmliq(i,k) = ssnow%wbliq(i,k)*real(C%density_liq,r_2)*soil%zse_vec(i,k) !liquid mass
1013a1013
> 
1016c1016,1018
< 
---
>          !do not pass with mpi
>          ssnow%sucs_hys(i,k) = ssnow%hys_fac(i,k)*soil%sucs_vec(i,k)
>          ssnow%smp_hys(i,k)  = min(ssnow%smp_hys(i,k),-ssnow%sucs_hys(i,k))
1020d1021
< 
1022c1023
< 
---
>      do k=1,ms
1024,1029c1025,1030
<           ssnow%gammzz(i,1) = MAX(soil%heat_cap_lower_limit(i,1),&
<                (1.0-soil%ssat_vec(i,1))*&
<                soil%css_vec(i,1) * soil%rhosoil_vec(i,1)  &
<                & + ssnow%wbliq(i,1) * C%cs_rho_wat           &
<                & + ssnow%wbice(i,1) * C%cs_rho_ice ) * soil%zse(1) +   &
<                & (1. - ssnow%isflag(i)) * C%cgsnow * ssnow%snowd(i)
---
>             ssnow%gammzz(i,k) = max(soil%heat_cap_lower_limit(i,k),&
>                                (1.0-soil%ssat_vec(i,k))*&
>                                soil%css_vec(i,k) * soil%rhosoil_vec(i,k)  &
>                 & + ssnow%wbliq(i,k) * real(C%cswat*C%density_liq,r_2)  &
>                 & + ssnow%wbice(i,k) * real(C%csice*C%density_ice,r_2) )* &
>                  soil%zse_vec(i,k) +   gammzz_snow(i,k)
1031a1033
>      end do
1034a1037
>    ssnow%wbliq_old = ssnow%wbliq
1038,1040c1041
<        wbtot_ic(i)  = SUM(ssnow%wbliq(i,:)*C%density_liq*soil%zse(:),1) + &
<             SUM(ssnow%wbice(i,:)*C%density_ice*soil%zse(:),1) + &
<             ssnow%GWwb(i)*soil%GWdz(i)*C%density_liq
---
>       wbtot_ic(i) = sum(ssnow%wmtot(i,:),dim=1)+ssnow%GWwb(i)*soil%GWdz(i)*C%density_liq
1049c1050
<     CALL snow_processes_soil_thermal(dels,ssnow,soil,veg,canopy,met,bal,snowmlt)
---
>    CALL snow_processes_soil_thermal(dels,ssnow,soil,veg,canopy,met,bal)
1054c1055
<     CALL  GWsoilfreeze(dels, soil, ssnow,tgg_old)
---
>    CALL  GWsoilfreeze(dels, soil, ssnow)
1065a1067,1078
>    IF (gw_params%BC_hysteresis)  &
>              CALL swc_hyst_direction(soil,ssnow,veg)
> 
>    !call swc_smp_dsmpdw(soil,ssnow)
>    if (gw_params%BC_hysteresis) then
>       call brook_corey_hysteresis_swc_smp(soil,ssnow)
>    elseif (gw_params%HC_SWC) then
>       call hutson_cass_swc_smp(soil,ssnow)
>    else
>       call brook_corey_swc_smp(soil,ssnow)
>    end if
> 
1110a1124,1125
>    first_gw_hydro_call=.false.
> 
1125,1128c1140,1144
<     REAL(r_2), DIMENSION(0:ms)  :: zimm     !layer interface depth in mm
<     REAL(r_2), DIMENSION(ms)    :: zmm      !node depths in mm
<     REAL(r_2)                   :: tempi, temp0,voleq1,wbrat
<     REAL(r_2), DIMENSION(mp,ms+1) :: ice_correction
---
>     REAL(r_2), dimension(mp,0:ms)  :: zimm     !layer interface depth in mm
>     REAL(r_2), dimension(mp,ms)    :: zmm      !node depths in mm
>     REAL(r_2)                   :: tempi, temp0,voleq1,wbrat,&
>                                    zi_smpc,tmp_const,voleq2
>     real(r_2), dimension(mp,ms+1) :: ztop,zbot
1132,1137d1147
<     IF (gw_params%ssgw_ice_switch) THEN
<        smp_cor = 8.0
<     ELSE
<        smp_cor = 0.0
<     END IF
< 
1139,1141c1149
<     dzmm    = 1000.0_r_2 * REAL(soil%zse(:),r_2)
<     zimm(0) = 0._r_2
< 
---
>     zimm(:,:) = 0._r_2
1143,1144c1151,1152
<        zimm(k) = zimm(k-1) + dzmm(k)
<        zmm(k)  = zimm(k-1) + 0.5_r_2*dzmm(k)
---
>        zimm(:,k) = zimm(:,k-1) + m2mm*soil%zse_vec(:,k)
>        zmm(:,k)  = zimm(:,k-1) + 0.5_r_2*m2mm*soil%zse_vec(:,k)
1148,1150c1156,1157
<        GWdzmm(i) = REAL(soil%GWdz(i),r_2)*1000._r_2
<        GWzimm(i) = zimm(ms)+GWdzmm(i)
<        zaq(i)    = zimm(ms) + 0.5_r_2*GWdzmm(i)
---
>        GWzimm(i) = zimm(i,ms)+m2mm*soil%GWdz(i)
>        zaq(i)    = zimm(i,ms) + 0.5_r_2*m2mm*soil%GWdz(i)
1153,1154c1160,1163
<     IF (.NOT.gw_params%ssgw_ice_switch) THEN
<        ice_correction(:,:) = 1._r_2
---
>     soil%wbc_GW(:) = 0.0
>     soil%wbc_vec(:,:) = 0.0
>     soil%smpc_vec(:,:) = 1.0e+30
>     soil%smpc_GW(:) = 1.0e+30
1156,1167c1165,1168
<     ELSE
< 
<        DO k=1,ms
<           DO i=1,mp
<              ice_correction(i,k)    = 1._r_2 + smp_cor * ssnow%wbice(i,k)
<              ice_correction(i,k)    =  ice_correction(i,k)**(2.0/soil%bch_vec(i,k))
<           END DO
<        END DO
<        DO i=1,mp
<           ice_correction(i,ms+1)    = 1._r_2 + smp_cor * ssnow%wbice(i,ms)
<           ice_correction(i,ms+1)    =  ice_correction(i,ms+1)**(2.0/soil%GWbch_vec(i))
<        END DO
---
>     if (.not.gw_params%BC_hysteresis) then !not needed but make code clear
>        ssnow%watr_hys = soil%watr(:,:)
>        ssnow%ssat_hys = soil%ssat_vec(:,:)
>        ssnow%sucs_hys = soil%sucs_vec
1168a1170,1181
>        if (gw_params%HC_SWC) then
>          soil%wbc_vec(:,:) = 2.0*soil%bch_vec(:,:)*soil%ssat_vec(:,:)/&
>                                  (1.0+2.0*soil%bch_vec(:,:))
>          soil%smpc_vec(:,:) = -soil%sucs_vec(:,:) * &
>                                (2.0*soil%bch_vec(:,:)/&
>                                ((1.0+2.0*soil%bch_vec(:,:))))**(-soil%bch_vec(:,:))
>          soil%wbc_GW(:) = 2.0*soil%GWbch_vec(:)*soil%GWssat_vec(:)/&
>                                  (1.0+2.0*soil%GWbch_vec(:))
>          soil%smpc_GW(:) = -soil%GWsucs_vec(:) * &
>                                (2.0*soil%GWbch_vec(:)/&
>                                ((1.0+2.0*soil%GWbch_vec(:))))**(-soil%GWbch_vec(:))
>        end if
1171,1172c1184
< 
<     !equilibrium water content
---
>     !!equilibrium water content
1176c1188
<           IF ((ssnow%wtd(i) .LE. zimm(k-1))) THEN         !fully saturated
---
>           if ((ssnow%wtd(i) .le. zimm(i,k-1))) then         !fully saturated
1178c1190
<              ssnow%wbeq(i,k) = soil%ssat_vec(i,k)
---
>              ssnow%wbeq(i,k) = ssnow%ssat_hys(i,k)
1180,1181c1192,1193
<           ELSEIF ((ssnow%wtd(i) .LE. zimm(k)) .AND. &
<                (ssnow%wtd(i) .GT. zimm(k-1))) THEN
---
>           elseif ((ssnow%wtd(i) .le. zimm(i,k)) .and. &
>                   (ssnow%wtd(i) .gt. zimm(i,k-1))) then
1185,1187c1197,1199
<                   (((soil%sucs_vec(i,k)+ssnow%wtd(i)-zimm(k-1))/&
<                   soil%sucs_vec(i,k)))**(1._r_2-1._r_2/soil%bch_vec(i,k))
<              voleq1 = -soil%sucs_vec(i,k)*(soil%ssat_vec(i,k)-soil%watr(i,k))/&
---
>                    (((ssnow%sucs_hys(i,k)+ssnow%wtd(i)-zimm(i,k-1))/&
>                       ssnow%sucs_hys(i,k)))**(1._r_2-1._r_2/soil%bch_vec(i,k))
>              voleq1 = -ssnow%sucs_hys(i,k)*(ssnow%ssat_hys(i,k)-ssnow%watr_hys(i,k))/&
1189,1194c1201,1204
<                   (ssnow%wtd(i)-zimm(k-1))*(tempi-temp0)
<              ssnow%wbeq(i,k) = (voleq1*(ssnow%wtd(i)-zimm(k-1)) +&
<                   (soil%ssat_vec(i,k)-soil%watr(i,k))&
<                   *(zimm(k)-ssnow%wtd(i)))/(zimm(k)-zimm(k-1))&
<                   + soil%watr(i,k)
<              ssnow%wbeq(i,k) = ssnow%wbeq(i,k)*ice_correction(i,k)
---
>                        (ssnow%wtd(i)-zimm(i,k-1))*(tempi-temp0) + ssnow%watr_hys(i,k)
>              ssnow%wbeq(i,k) = (voleq1*(ssnow%wtd(i)-zimm(i,k-1)) +&
>                                (ssnow%ssat_hys(i,k))&
>                                *(zimm(i,k)-ssnow%wtd(i)))/(zimm(i,k)-zimm(i,k-1))
1197,1201c1207,1211
<              tempi = (((soil%sucs_vec(i,k)+ssnow%wtd(i)-zimm(k))/&
<                   soil%sucs_vec(i,k)))**(1._r_2-1._r_2/soil%bch_vec(i,k))
<              temp0 = (((soil%sucs_vec(i,k)+ssnow%wtd(i)-zimm(k-1))/&
<                   soil%sucs_vec(i,k)))**(1._r_2-1._r_2/soil%bch_vec(i,k))
<              ssnow%wbeq(i,k) = -soil%sucs_vec(i,k)*(soil%ssat_vec(i,k)-soil%watr(i,k))/&
---
>              tempi = (((ssnow%sucs_hys(i,k)+ssnow%wtd(i)-zimm(i,k))/&
>                       ssnow%sucs_hys(i,k)))**(1._r_2-1._r_2/soil%bch_vec(i,k))
>              temp0 = (((ssnow%sucs_hys(i,k)+ssnow%wtd(i)-zimm(i,k-1))/&
>                      ssnow%sucs_hys(i,k)))**(1._r_2-1._r_2/soil%bch_vec(i,k))
>              ssnow%wbeq(i,k) = -ssnow%sucs_hys(i,k)*(ssnow%ssat_hys(i,k)-ssnow%watr_hys(i,k))/&
1203,1204c1213
<                   (zimm(k)-zimm(k-1))*(tempi-temp0)+soil%watr(i,k)
<              ssnow%wbeq(i,k) = ssnow%wbeq(i,k)*ice_correction(i,k)
---
>                                (zimm(i,k)-zimm(i,k-1))*(tempi-temp0)+ssnow%watr_hys(i,k)
1207c1216,1217
<           ssnow%wbeq(i,k) = MIN(MAX(ssnow%wbeq(i,k),soil%watr(i,k)),soil%ssat_vec(i,k))
---
>          if (.not.gw_params%HC_SWC) then
>              ssnow%wbeq(i,k) = min(max(ssnow%wbeq(i,k),ssnow%watr_hys(i,k)),ssnow%ssat_hys(i,k))
1209c1219,1224
<           ssnow%wbeq(i,k) = ssnow%wbeq(i,k)*ice_correction(i,k)
---
>              wbrat = min(max((&
>                      ssnow%wbeq(i,k) - ssnow%watr_hys(i,k))/&
>                              (ssnow%ssat_hys(i,k)-ssnow%watr_hys(i,k)),&
>                           0.01_r_2),1._r_2)
>               ssnow%zq(i,k) = max(&
>                             -ssnow%sucs_hys(i,k)*(wbrat**(-soil%bch_vec(i,k))),sucmin)
1210a1226,1227
>           else
>              if (ssnow%wbeq(i,k) .lt. soil%wbc_vec(i,k)) then
1213c1230
<                0.001_r_2),1._r_2)
---
>                                0.01_r_2),1._r_2)
1216a1234,1238
>              else
>                 ssnow%zq(i,k) = -soil%sucs_vec(i,k)* &
>                              sqrt(1._r_2 - ssnow%wbeq(i,k)/soil%ssat_vec(i,k))/&
>                                   (sqrt(1._r_2-soil%wbc_vec(i,k)/soil%ssat_vec(i,k))*&
>                                  ( (soil%wbc_vec(i,k)/soil%ssat_vec(i,k))**soil%bch_vec(i,k) ))
1218,1220d1239
<           IF (gw_params%ssgw_ice_switch) THEN
<              ssnow%zq(i,k) = MAX(&
<                   -soil%sucs_vec(i,k)*(1._r_2+smp_cor*ssnow%wbice(i,k))*(wbrat**(-soil%bch_vec(i,k))),sucmin)
1223c1242
< 
---
>           end if
1226d1244
< 
1229c1247
<        IF (ssnow%wtd(i) .LE. zimm(ms)) THEN      !fully saturated
---
>        if (ssnow%wtd(i) .le. zimm(i,ms)) then      !fully saturated
1231c1249
<           ssnow%GWwbeq(i) = soil%GWssat_vec(i)-soil%GWwatr(i)
---
>           ssnow%GWwbeq(i) = soil%GWssat_vec(i)
1238c1256
<           temp0 = (((soil%GWsucs_vec(i)+ssnow%wtd(i)-zimm(ms))/&
---
>           temp0 = (((soil%GWsucs_vec(i)+ssnow%wtd(i)-zimm(i,ms))/&
1242c1260
<                (GWzimm(i)-zimm(ms))*(tempi-temp0) + soil%GWwatr(i)
---
>                            (GWzimm(i)-zimm(i,ms))*(tempi-temp0) + soil%GWwatr(i)
1247c1265,1266
<           temp0  = (((soil%GWsucs_vec(i)+ssnow%wtd(i)-zimm(ms))/&
---
>              temp0 = &
>                    (((soil%GWsucs_vec(i)+ssnow%wtd(i)-zimm(i,ms))/&
1251,1254c1270,1273
<                (ssnow%wtd(i)-zimm(ms))*(tempi-temp0) + soil%GWwatr(i)
<           ssnow%GWwbeq(i) = (voleq1*(ssnow%wtd(i)-zimm(ms)) + &
<                (soil%GWssat_vec(i)-soil%GWwatr(i))*&
<                (GWzimm(i)-ssnow%wtd(i)))/(GWzimm(i)-zimm(ms)) + soil%GWwatr(i)
---
>                        (ssnow%wtd(i)-zimm(i,ms))*(tempi-temp0) + soil%GWwatr(i)
>              ssnow%GWwbeq(i) = (voleq1*(ssnow%wtd(i)-zimm(i,ms)) +&
>                                (soil%GWssat_vec(i))&
>                                *(GWzimm(i)-ssnow%wtd(i)))/(GWzimm(i)-zimm(i,ms))
1257a1277,1278
>        if (.not.gw_params%HC_SWC) then
> 
1261c1282
<             (soil%GWssat_vec(i)-soil%GWwatr(i)),0.001_r_2))**(-soil%GWbch_vec(i))
---
>                        (soil%GWssat_vec(i)-soil%GWwatr(i)),0.01_r_2))**(-soil%GWbch_vec(i))
1263a1285,1301
>        else
>           if (ssnow%GWwbeq(i) .lt. soil%wbc_GW(i)) then
>             wbrat = min(max((&
>                     ssnow%wbeq(i,k) - soil%GWwatr(i))/(soil%GWssat_vec(i)-soil%GWwatr(i)),&
>                             0.01_r_2),1._r_2)
> 
>             ssnow%GWzq(i) = max(&
>                               -soil%GWsucs_vec(i)*(wbrat**(-soil%GWbch_vec(i))),sucmin)
>           else
>              ssnow%gwzq(i) = -soil%gwsucs_vec(i)* &
>                           sqrt(1._r_2 - ssnow%gwwbeq(i)/soil%gwssat_vec(i))/&
>                                (sqrt(1._r_2-soil%wbc_gw(i)/soil%gwssat_vec(i))*&
>                               ( (soil%wbc_gw(i)/soil%GWssat_vec(i))**soil%GWbch_vec(i) ))
> 
>           end if
>         end if
> 
1264a1303,1572
>     !equilibrium water content
> !   else! (gw_params%HC_SWC) then
> !
> !   do k=1,ms
> !      do i=1,mp
> !         ztop(i,k) = -soil%sucs_vec(i,k)-ssnow%wtd(i) + zimm(i,k-1)
> !         zbot(i,k) = -soil%sucs_vec(i,k)-ssnow%wtd(i) + zimm(i,k)
> !      end do
> !   end do
> !   do i=1,mp
> !      ztop(i,ms+1) = -soil%GWsucs_vec(i)-ssnow%wtd(i) + zimm(i,ms)
> !      zbot(i,ms+1) = -soil%GWsucs_vec(i)-ssnow%wtd(i) + GWzimm(i)
> !   end do
> !
> !    do k=1,ms
> !       do i=1,mp
> !
> !          if ((ssnow%wtd(i) .le. zimm(i,k-1))) then         !fully saturated
> !
> !             ssnow%wbeq(i,k) = soil%ssat_vec(i,k)
> !
> !          elseif ((ssnow%wtd(i) .le. zimm(i,k)) .and. &
> !                  (ssnow%wtd(i) .gt. zimm(i,k-1))) then
> !
> !
> !             if (zbot(i,k) .lt. soil%smpc_vec(i,k) .and. &
> !                 ztop(i,k) .lt. soil%smpc_vec(i,k) ) then
> !
> !             tempi = 1._r_2
> !             temp0 = &
> !                   (((soil%sucs_vec(i,k)+ssnow%wtd(i)-zimm(i,k-1))/&
> !                      soil%sucs_vec(i,k)))**(1._r_2-1._r_2/soil%bch_vec(i,k))
> !             voleq1 = -soil%sucs_vec(i,k)*(soil%ssat_vec(i,k)-soil%watr(i,k))/&
> !                       (1._r_2-1._r_2/soil%bch_vec(i,k))/&
> !                       (ssnow%wtd(i)-zimm(i,k-1))*(tempi-temp0) + soil%watr(i,k)
> !             ssnow%wbeq(i,k) = (voleq1*(ssnow%wtd(i)-zimm(i,k-1)) +&
> !                               (soil%ssat_vec(i,k))&
> !                               *(zimm(i,k)-ssnow%wtd(i)))/(zimm(i,k)-zimm(i,k-1))
> !             elseif (zbot(i,k) .ge. soil%smpc_vec(i,k) .and. &
> !                     ztop(i,k) .lt. soil%smpc_vec(i,k) ) then
> !
> !             zi_smpc = ssnow%wtd(i)-(soil%sucs_vec(i,k)+soil%smpc_vec(i,k))
> !
> !             tmp_const = (1.0/3.0)*soil%ssat_vec(i,k)*(1.0-soil%wbc_vec(i,k)/soil%ssat_vec(i,k))/&
> !                                    (soil%sucs_vec(i,k)*soil%sucs_vec(i,k)*&
> !                                     (soil%wbc_vec(i,k)/soil%ssat_vec(i,k))**(-soil%bch_vec(i,k)))
> !
> !             voleq2 = soil%ssat_vec(i,k)*(ssnow%wtd(i)-zi_smpc) + &
> !                      tmp_const*( (-soil%sucs_vec(i,k))**3.0 - &
> !                         (-soil%sucs_vec(i,k)+ssnow%wtd(i)-zi_smpc)**3.0)
> !             tempi = (((soil%sucs_vec(i,k)+ssnow%wtd(i)-zi_smpc)/&
> !                      soil%sucs_vec(i,k)))**(1._r_2-1._r_2/soil%bch_vec(i,k))
> !             temp0 = (((soil%sucs_vec(i,k)+ssnow%wtd(i)-zimm(i,k-1))/&
> !                     soil%sucs_vec(i,k)))**(1._r_2-1._r_2/soil%bch_vec(i,k))
> !             voleq1 =-soil%sucs_vec(i,k)*(soil%ssat_vec(i,k)-soil%watr(i,k))/&
> !                               (1._r_2-1._r_2/soil%bch_vec(i,k))/&
> !                               (zi_smpc-zimm(i,k-1))*(tempi-temp0) + soil%watr(i,k)
> !             ssnow%wbeq(i,k) =( (zimm(i,k)-ssnow%wtd(i))*soil%ssat_vec(i,k)+&
> !                                (ssnow%wtd(i)-zi_smpc)*voleq2 + &
> !                                (zi_smpc-zimm(i,k-1))*voleq1 ) / &
> !                                 (zimm(i,k)-zimm(i,k-1))
> !             else
> !
> !             tmp_const = (1.0/3.0)*soil%ssat_vec(i,k)*(1.0-soil%wbc_vec(i,k)/soil%ssat_vec(i,k))/&
> !                                    (soil%sucs_vec(i,k)*soil%sucs_vec(i,k)*&
> !                                     (soil%wbc_vec(i,k)/soil%ssat_vec(i,k))**(-soil%bch_vec(i,k)))
> !
> !             zi_smpc = zimm(i,k-1)
> !             voleq2 = soil%ssat_vec(i,k)*(ssnow%wtd(i)-zi_smpc) + &
> !                      tmp_const*( (-soil%sucs_vec(i,k))**3.0 - &
> !                         (-soil%sucs_vec(i,k)+ssnow%wtd(i)-zi_smpc)**3.0)
> !
> !             ssnow%wbeq(i,k) =( (zimm(i,k)-ssnow%wtd(i))*soil%ssat_vec(i,k)+&
> !                                 (ssnow%wtd(i)-zi_smpc)*voleq2) / (zimm(i,k)-zimm(i,k-1))
> !
> !             end if
> !
> !          else
> !             if (zbot(i,k) .lt. soil%smpc_vec(i,k) .and.  &
> !                 ztop(i,k) .lt. soil%smpc_vec(i,k) ) then
> !
> !             tempi = (((soil%sucs_vec(i,k)+ssnow%wtd(i)-zimm(i,k))/&
> !                      soil%sucs_vec(i,k)))**(1._r_2-1._r_2/soil%bch_vec(i,k))
> !             temp0 = (((soil%sucs_vec(i,k)+ssnow%wtd(i)-zimm(i,k-1))/&
> !                     soil%sucs_vec(i,k)))**(1._r_2-1._r_2/soil%bch_vec(i,k))
> !             ssnow%wbeq(i,k) = -soil%sucs_vec(i,k)*(soil%ssat_vec(i,k)-soil%watr(i,k))/&
> !                               (1._r_2-1._r_2/soil%bch_vec(i,k))/&
> !                               (zimm(i,k)-zimm(i,k-1))*(tempi-temp0)+soil%watr(i,k)
> !
> !             elseif (zbot(i,k) .lt. soil%smpc_vec(i,k) .and.&
> !                     ztop(i,k) .ge. soil%smpc_vec(i,k) ) then
> !               !watr is zero for HC SWC
> !             zi_smpc = zimm(i,k) - (soil%sucs_vec(i,k)+soil%smpc_vec(i,k))
> !
> !             tmp_const = (1.0/3.0)*soil%ssat_vec(i,k)*(1.0-soil%wbc_vec(i,k)/soil%ssat_vec(i,k))/&
> !                                    (soil%sucs_vec(i,k)*soil%sucs_vec(i,k)*&
> !                                     (soil%wbc_vec(i,k)/soil%ssat_vec(i,k))**(-soil%bch_vec(i,k)))
> !
> !             voleq2 = soil%ssat_vec(i,k)*(zimm(i,k) - zi_smpc) + &
> !                      tmp_const*( (-soil%sucs_vec(i,k))**3.0 - &
> !                         (-soil%sucs_vec(i,k)+ssnow%wtd(i)-zi_smpc)**3.0)
> !             tempi = (((soil%sucs_vec(i,k)+ssnow%wtd(i)-zi_smpc)/&
> !                      soil%sucs_vec(i,k)))**(1._r_2-1._r_2/soil%bch_vec(i,k))
> !             temp0 = (((soil%sucs_vec(i,k)+ssnow%wtd(i)-zimm(i,k-1))/&
> !                     soil%sucs_vec(i,k)))**(1._r_2-1._r_2/soil%bch_vec(i,k))
> !             voleq1 =-soil%sucs_vec(i,k)*(soil%ssat_vec(i,k)-soil%watr(i,k))/&
> !                               (1._r_2-1._r_2/soil%bch_vec(i,k))/&
> !                               (zi_smpc-zimm(i,k-1))*(tempi-temp0) + soil%watr(i,k)
> !             ssnow%wbeq(i,k) =( &
> !                                (zimm(i,k)-zi_smpc)*voleq2 + &
> !                                (zi_smpc-zimm(i,k-1))*voleq1 ) / &
> !                                 (zimm(i,k)-zimm(i,k-1))
> !             else
> !             tmp_const = (1.0/3.0)*soil%ssat_vec(i,k)*(1.0-soil%wbc_vec(i,k)/soil%ssat_vec(i,k))/&
> !                                    (soil%sucs_vec(i,k)*soil%sucs_vec(i,k)*&
> !                                     (soil%wbc_vec(i,k)/soil%ssat_vec(i,k))**(-soil%bch_vec(i,k)))
> !
> !             ssnow%wbeq(i,k)  = (soil%ssat_vec(i,k)*(zimm(i,k) - zimm(i,k-1)) + &
> !                               tmp_const*( (min(-sucmin,zbot(i,k)))**3.0 - &
> !                                   (min(-sucmin,ztop(i,k)))**3.0) )/ (zimm(i,k)-zimm(i,k-1))
> !
> !
> !             end if
> !
> !          end if
> !
> !          ssnow%wbeq(i,k) = min(max(ssnow%wbeq(i,k),soil%watr(i,k)),soil%ssat_vec(i,k))
> !
> !          if (ssnow%wbeq(i,k) .lt. soil%wbc_vec(i,k)) then
> !            wbrat = min(max((&
> !                    ssnow%wbeq(i,k) - soil%watr(i,k))/(soil%ssat_vec(i,k)-soil%watr(i,k)),&
> !                            0.01_r_2),1._r_2)
> !
> !            ssnow%zq(i,k) = max(&
> !                              -soil%sucs_vec(i,k)*(wbrat**(-soil%bch_vec(i,k))),sucmin)
> !          else
> !             ssnow%zq(i,k) = -soil%sucs_vec(i,k)* &
> !                          sqrt(1._r_2 - ssnow%wbeq(i,k)/soil%ssat_vec(i,k))/&
> !                               (sqrt(1._r_2-soil%wbc_vec(i,k)/soil%ssat_vec(i,k))*&
> !                              ( (soil%wbc_vec(i,k)/soil%ssat_vec(i,k))**soil%bch_vec(i,k) ))
> !
> !          end if
> !
> !
> !       end do  !mp
> !    end do  !ms
> !
> !    do i=1,mp
> !    !Aquifer Equilibrium water content
> !       if (ssnow%wtd(i) .le. zimm(i,ms)) then      !fully saturated
> !
> !          ssnow%GWwbeq(i) = soil%GWssat_vec(i)
> !
> !       elseif ((ssnow%wtd(i) .gt. GWzimm(i)))   then     !fully unsaturated
> !         if (zbot(i,ms+1) .lt. soil%smpc_GW(i) .and.  &
> !             ztop(i,ms+1) .lt. soil%smpc_GW(i) ) then
> !
> !          tempi = &
> !                (((soil%GWsucs_vec(i)+ssnow%wtd(i)-GWzimm(i))/&
> !                  soil%GWsucs_vec(i)))**(1._r_2-1._r_2/soil%GWbch_vec(i))
> !          temp0 = (((soil%GWsucs_vec(i)+ssnow%wtd(i)-zimm(i,ms))/&
> !                     soil%GWsucs_vec(i)))**(1._r_2-1._r_2/soil%GWbch_vec(i))
> !          ssnow%GWwbeq(i) = -soil%GWsucs_vec(i)*soil%GWssat_vec(i)/&
> !                          (1._r_2-1._r_2/soil%GWbch_vec(i))/&
> !                           (GWzimm(i)-zimm(i,ms))*(tempi-temp0) + soil%GWwatr(i)
> !
> !         elseif (zbot(i,ms+1) .lt. soil%smpc_GW(i) .and.  &
> !                ztop(i,ms+1) .ge. soil%smpc_GW(i) ) then
> !               !watr is zero for HC SWC
> !             zi_smpc = GWzimm(i) - (soil%GWsucs_vec(i)+soil%smpc_GW(i))
> !
> !             tmp_const = (1.0/3.0)*soil%GWssat_vec(i)*(1.0-soil%wbc_GW(i)/soil%GWssat_vec(i))/&
> !                                    (soil%GWsucs_vec(i)*soil%GWsucs_vec(i)*&
> !                                     (soil%wbc_GW(i)/soil%GWssat_vec(i))**(-soil%GWbch_vec(i)))
> !
> !             voleq2 = soil%GWssat_vec(i)*(GWzimm(i) - zi_smpc) + &
> !                      tmp_const*( (-soil%GWsucs_vec(i))**3.0 - &
> !                         (-soil%GWsucs_vec(i)+ssnow%wtd(i)-zi_smpc)**3.0)
> !             tempi = (((soil%GWsucs_vec(i)+ssnow%wtd(i)-zi_smpc)/&
> !                      soil%GWsucs_vec(i)))**(1._r_2-1._r_2/soil%GWbch_vec(i))
> !             temp0 = (((soil%GWsucs_vec(i)+ssnow%wtd(i)-zimm(i,ms))/&
> !                     soil%GWsucs_vec(i)))**(1._r_2-1._r_2/soil%GWbch_vec(i))
> !             voleq1 =-soil%GWsucs_vec(i)*(soil%GWssat_vec(i)-soil%GWwatr(i))/&
> !                               (1._r_2-1._r_2/soil%GWbch_vec(i))/&
> !                               (zi_smpc-zimm(i,ms))*(tempi-temp0) + soil%GWwatr(i)
> !             ssnow%GWwbeq(i) =( &
> !                                (GWzimm(i)-zi_smpc)*voleq2 + &
> !                                (zi_smpc-zimm(i,ms))*voleq1 ) / &
> !                                 (zimm(i,k)-zimm(i,k-1))
> !             else
> !             tmp_const = (1.0/3.0)*soil%GWssat_vec(i)*(1.0-soil%wbc_GW(i)/soil%GWssat_vec(i))/&
> !                                    (soil%GWsucs_vec(i)*soil%GWsucs_vec(i)*&
> !                                     (soil%wbc_GW(i)/soil%GWssat_vec(i))**(-soil%GWbch_vec(i)))
> !
> !             ssnow%wbeq(i,k)  = (soil%GWssat_vec(i)*(GWzimm(i) - zimm(i,ms)) + &
> !                               tmp_const*( (zbot(i,k))**3.0 - &
> !                                   (ztop(i,k))**3.0) )/ (GWzimm(i)-zimm(i,ms))
> !             end if
> !       else
> !             if (zbot(i,k) .lt. soil%smpc_GW(i) .and. &
> !                 ztop(i,k) .lt. soil%smpc_GW(i) ) then
> !
> !             tempi = 1._r_2
> !             temp0 = &
> !                   (((soil%GWsucs_vec(i)+ssnow%wtd(i)-zimm(i,ms))/&
> !                      soil%GWsucs_vec(i)))**(1._r_2-1._r_2/soil%GWbch_vec(i))
> !             voleq1 = -soil%GWsucs_vec(i)*(soil%GWssat_vec(i)-soil%GWwatr(i))/&
> !                       (1._r_2-1._r_2/soil%GWbch_vec(i))/&
> !                       (ssnow%wtd(i)-zimm(i,ms))*(tempi-temp0) + soil%GWwatr(i)
> !             ssnow%GWwbeq(i) = (voleq1*(ssnow%wtd(i)-zimm(i,ms)) +&
> !                               (soil%GWssat_vec(i))&
> !                               *(GWzimm(i)-ssnow%wtd(i)))/(GWzimm(i)-zimm(i,ms))
> !             elseif (zbot(i,k) .ge. soil%smpc_GW(i) .and. &
> !                     ztop(i,k) .lt. soil%smpc_GW(i) ) then
> !
> !             zi_smpc = ssnow%wtd(i)-(soil%GWsucs_vec(i)+soil%smpc_GW(i))
> !
> !             tmp_const = (1.0/3.0)*soil%GWssat_vec(i)*(1.0-soil%wbc_GW(i)/soil%GWssat_vec(i))/&
> !                                    (soil%GWsucs_vec(i)*soil%GWsucs_vec(i)*&
> !                                     (soil%wbc_GW(i)/soil%GWssat_vec(i))**(-soil%GWbch_vec(i)))
> !
> !             voleq2 = soil%GWssat_vec(i)*(ssnow%wtd(i)-zi_smpc) + &
> !                      tmp_const*( (-soil%GWsucs_vec(i))**3.0 - &
> !                         (-soil%GWsucs_vec(i)+ssnow%wtd(i)-zi_smpc)**3.0)
> !             tempi = (((soil%GWsucs_vec(i)+ssnow%wtd(i)-zi_smpc)/&
> !                      soil%GWsucs_vec(i)))**(1._r_2-1._r_2/soil%GWbch_vec(i))
> !             temp0 = (((soil%GWsucs_vec(i)+ssnow%wtd(i)-zimm(i,ms))/&
> !                     soil%GWsucs_vec(i)))**(1._r_2-1._r_2/soil%GWbch_vec(i))
> !             voleq1 =-soil%GWsucs_vec(i)*(soil%GWssat_vec(i)-soil%GWwatr(i))/&
> !                               (1._r_2-1._r_2/soil%GWbch_vec(i))/&
> !                               (zi_smpc-zimm(i,ms))*(tempi-temp0) + soil%GWwatr(i)
> !             ssnow%GWwbeq(i) =( (GWzimm(i)-ssnow%wtd(i))*soil%GWssat_vec(i)+&
> !                                (ssnow%wtd(i)-zi_smpc)*voleq2 + &
> !                                (zi_smpc-zimm(i,ms))*voleq1 ) / &
> !                                 (GWzimm(i)-zimm(i,ms))
> !             else
> !
> !             tmp_const = (1.0/3.0)*soil%GWssat_vec(i)*(1.0-soil%wbc_GW(i)/soil%GWssat_vec(i))/&
> !                                    (soil%GWsucs_vec(i)*soil%GWsucs_vec(i)*&
> !                                     (soil%wbc_GW(i)/soil%GWssat_vec(i))**(-soil%GWbch_vec(i)))
> !
> !             zi_smpc = zimm(i,ms)
> !             voleq2 = soil%GWssat_vec(i)*(ssnow%wtd(i)-zi_smpc) + &
> !                      tmp_const*( (-soil%GWsucs_vec(i))**3.0 - &
> !                         (-soil%GWsucs_vec(i)+ssnow%wtd(i)-zi_smpc)**3.0)
> !
> !             ssnow%GWwbeq(i) =( (GWzimm(i)-ssnow%wtd(i))*soil%GWssat_vec(i)+&
> !                                 (ssnow%wtd(i)-zi_smpc)*voleq2) / (GWzimm(i)-zimm(i,ms))
> !
> !             end if
> !
> !
> !       end if
> !
> !       ssnow%GWwbeq(i) = min(max(ssnow%GWwbeq(i),soil%GWwatr(i)),soil%GWssat_vec(i))
> !
> !       if (ssnow%GWwbeq(i) .lt. soil%wbc_GW(i)) then
> !          ssnow%GWzq(i) = -soil%GWsucs_vec(i)*(max((ssnow%GWwbeq(i)-soil%GWwatr(i))/     &
> !                       (soil%GWssat_vec(i)-soil%GWwatr(i)),0.001_r_2))**(-soil%GWbch_vec(i))
> !       else
> !          ssnow%GWzq(i) = -soil%GWsucs_vec(i)* &
> !                           sqrt(1._r_2 - ssnow%GWwbeq(i)/soil%GWssat_vec(i))/&
> !                            (sqrt(1._r_2-soil%wbc_GW(i)/soil%GWssat_vec(i))*&
> !                           ( (soil%wbc_GW(i)/soil%GWssat_vec(i))**soil%GWbch_vec(i) ))
> !       end if
> !       ssnow%GWzq(i) = max(sucmin, ssnow%GWzq(i))
> !
> !    end do
> !
> !    end if
1285c1593
<     CALL point2constants( C )
---
>     !CALL point2constants( C )
1308d1615
< 
1310,1312c1617,1620
<           dzmm_one  = 1000._r_2 * REAL(soil%zse_vec(i,1),r_2)
<           icemass  = ssnow%wbice(i,1) * dzmm_one
<           liqmass  = (ssnow%wb(i,1)-ssnow%wbice(i,1)) * dzmm_one
---
>         ! MMY it doesn't match to icef in SUBROUTINE ovrlndflx. I made them consistent
>          dzmm_one  = m2mm * real(soil%zse_vec(i,1),r_2)
>          icemass  = ssnow%wmice(i,1) ! MMY ssnow%wbice(i,1) * dzmm_one
>          liqmass  = ssnow%wmliq(i,1) ! MMY (ssnow%wb(i,1)-den_rat*ssnow%wbice(i,1)) * dzmm_one
1314c1622,1623
<           icef(i)     = MAX(0._r_2,MIN(1._r_2, gw_params%IceBeta*icemass / totmass))
---
>          icef(i)  = max(0._r_2,min(1._r_2,icemass / totmass)) ! MMY
>                ! MMY max(0._r_2,min(1._r_2, gw_params%IceBeta*icemass / totmass))
1317d1625
< 
1325c1633,1634
<           satfrac_liqice(i) = fice + (1._r_2-fice)*ssnow%satfrac(i)
---
>          satfrac_liqice(i) = max(0.,min(0.95,fice + (1._r_2-fice)*ssnow%satfrac(i) ) ) ! MMY
>                              ! MMY fice + (1._r_2-fice)*ssnow%satfrac(i)
1327c1636
<           wb_unsat = ((ssnow%wb(i,1)-ssnow%wbice(i,1)) -&
---
>          wb_unsat = ((ssnow%wb(i,1)-ssnow%wbice(i,1)*den_rat) -& ! MMY add *den_rat
1339c1648
<              xx = 0.25 * (1._r_2 - COS(C%pi*wb_unsat/(wb_evap_threshold)))**2.0
---
>             xx = 0.25 * (1._r_2 - cos(3.14159_r_2*wb_unsat/(wb_evap_threshold)))**2.0
1362c1671,1672
<                ( ssnow%wbice(i,1) / ssnow%wb(i,1) )**2 ) ) )
---
>                                 ( ssnow%wbice(i,1) * den_rat & ! MMY not sure whether needed but add * den_rat
>                                 / ssnow%wb(i,1) )**2 ) ) )
1382,1511d1691
<   !SUBROUTINE calc_soil_hydraulic_props(ssnow,soil,veg)
<   !   USE cable_common_module
<   !   TYPE(soil_parameter_type), INTENT(INOUT)     :: soil
<   !   TYPE(soil_snow_type)     , INTENT(INOUT)  :: ssnow
<   !   TYPE(veg_parameter_type) , INTENT(INOUT)     :: veg
<   !
<   !   INTEGER :: i,k,kk
<   !
<   !   REAL(r_2), DIMENSION(mp) :: s1, &  !temporary variables for calculating hydraulic properties
<   !                               s2, &
<   !                               s_mid, &
<   !                               liq_ratio, &
<   !                               Dliq_ratio_Dz
<   !
<   !   REAL(r_2), DIMENSION(0:ms) :: zimm  !depths at interface between layers
<   !   REAL(r_2), dimension(mp,ms) ::wb_temp
<   !
<   !    !soil matric potential, hydraulic conductivity, and
<   !         derivatives of each with respect to water (calculated using total (not liquid))
<   !
<   !    do k=1,ms
<   !       do i=1,mp
<   !          ssnow%icefrac(i,k) = ssnow%wbice(i,k)/(max(ssnow%wb(i,k),0.01_r_2))
<   !          ssnow%fracice(i,k) = (exp(-gw_params%IceAlpha*(1._r_2-ssnow%icefrac(i,k)))&
<   !                               -exp(-gw_params%IceAlpha))/(1._r_2-exp(-gw_params%IceAlpha))
<   !       end do
<   !    end do
<   !
<   !    ssnow%fracice(:,:) = max( min( ssnow%fracice, 1._r_2), 0._r_2)
<   !
<   !    if (gw_params%ssgw_ice_switch) then
<   !       wb_temp = ssnow%wbliq
<   !    else
<   !       wb_temp = ssnow%wb
<   !    end if
<   !
<   !    do k=1,ms-1
<   !       kk=k+1
<   !       do i=1,mp
<   !
<   !          s1(i) = 0.5_r_2*(max(wb_temp(i,k)-soil%watr(i,k),0.) + &
<   !                           max(wb_temp(i,kk)-soil%watr(i,kk),0.)) / &
<   !                         (0.5_r_2*((soil%ssat_vec(i,k)-soil%watr(i,k)) + &
<   !                         (soil%ssat_vec(i,kk)-soil%watr(i,kk))))
<   !
<   !          s1(i) = min(max(s1(i),0.01_r_2),1._r_2)
<   !          s2(i) = soil%hyds_vec(i,k)*s1(i)**(2._r_2*soil%bch_vec(i,k)+2._r_2)
<   !
<   !          ssnow%hk(i,k)    =  s1(i)*s2(i)
<   !          ssnow%dhkdw(i,k) = (2._r_2*soil%bch_vec(i,k)+3._r_2)*s2(i)*&
<   !                            0.5_r_2/(soil%ssat_vec(i,k)-soil%watr(i,k))
<   !          if (.not.gw_params%ssgw_ice_switch) then
<   !             ssnow%hk(i,k)    = ssnow%hk(i,k)*&
<   !                               (1.0 - 0.5_r_2*(ssnow%fracice(i,k)+ssnow%fracice(i,kk)))
<   !             ssnow%dhkdw(i,k) = ssnow%dhkdw(i,k)*&
<   !                               (1.0 - 0.5_r_2*(ssnow%fracice(i,k)+ssnow%fracice(i,kk)))
<   !          end if
<   !       end do
<   !    end do
<   !
<   !    liq_ratio(:) = 1.0
<   !
<   !    k = ms
<   !       do i=1,mp
<   !
<   !          if (gw_params%ssgw_ice_switch) then
<   !             liq_ratio(i) =min(1.,max(0.,wb_temp(i,k)/max(ssnow%wb(i,k),1e-6) ) )
<   !          end if
<   !
<   !          s1(i) = 0.5_r_2*(max(wb_temp(i,k)-soil%watr(i,k),0.) + &
<   !                           max(liq_ratio(i)*ssnow%GWwb(i)-soil%GWwatr(i),0.)) / &
<   !                  (0.5_r_2*(soil%ssat_vec(i,k)-soil%watr(i,k) +&
<   !                            soil%GWssat_vec(i)-soil%GWwatr(i)))
<   !
<   !          s1(i) = min(max(s1(i),0.01_r_2),1._r_2)
<   !          s2(i) = soil%hyds_vec(i,k)*s1(i)**(2._r_2*soil%bch_vec(i,k)+2._r_2)
<   !
<   !          ssnow%hk(i,k)    = s1(i)*s2(i)
<   !          ssnow%dhkdw(i,k) = (2._r_2*soil%bch_vec(i,k)+3._r_2)*&
<   !                             s2(i)*0.5_r_2/(soil%ssat_vec(i,k)-soil%watr(i,k))
<   !          if (.not.gw_params%ssgw_ice_switch) then
<   !             ssnow%hk(i,k)    =  (1.-ssnow%fracice(i,k))*ssnow%hk(i,k)
<   !             ssnow%dhkdw(i,k) =  (1.-ssnow%fracice(i,k))*ssnow%dhkdw(i,k)
<   !          endif
<   !       end do
<   !
<   !    do k=1,ms
<   !       do i=1,mp
<   !          s_mid(i) = (ssnow%wb(i,k)-soil%watr(i,k))/&  !+dri*ssnow%wbice(:,k)
<   !              (soil%ssat_vec(i,k)-soil%watr(i,k))
<   !
<   !          s_mid(i) = min(max(s_mid(i),0.001_r_2),1._r_2)
<   !
<   !          ssnow%smp(i,k) = -soil%sucs_vec(i,k)*s_mid(i)**(-soil%bch_vec(i,k))
<   !
<   !          ssnow%smp(i,k) = max(min(ssnow%smp(i,k),-soil%sucs_vec(i,k)),sucmin)
<   !
<   !          ssnow%dsmpdw(i,k) = -soil%bch_vec(i,k)*ssnow%smp(i,k)/&
<   !                    (max(s_mid(i)*(soil%ssat_vec(i,k)-soil%watr(i,k)),0.001_r_2))
<   !       end do
<   !    end do
<   !
<   !    do i=1,mp
<   !       !Aquifer properties
<   !       s_mid(i) = (ssnow%GWwb(i)*liq_ratio(i)-soil%GWwatr(i))/&
<   !                    (soil%GWssat_vec(i)-soil%GWwatr(i))
<   !       s_mid(i) = min(max(s_mid(i),0.001_r_2),1._r_2)
<   !       s2(i)    = soil%GWhyds_vec(i)*s_mid(i)**(2._r_2*soil%GWbch_vec(i)+2._r_2)
<   !
<   !       ssnow%GWhk(i)     =s_mid(i)*s2(i)
<   !
<   !       ssnow%GWdhkdw(i)  =  (2._r_2*soil%GWbch_vec(i)+3._r_2)*&
<   !                           s2(i)*0.5_r_2/(soil%GWssat_vec(i)-soil%GWwatr(i))
<   !
<   !       if (.not.gw_params%ssgw_ice_switch) then
<   !          ssnow%GWhk(i)    = (1.-ssnow%fracice(i,ms)) * ssnow%GWhk(i)
<   !          ssnow%GWdhkdw(i) = (1.-ssnow%fracice(i,ms)) * ssnow%GWdhkdw(i)
<   !       endif
<   !
<   !       s_mid(i) = (ssnow%GWwb(i)-soil%GWwatr(i))/(soil%GWssat_vec(i)-soil%GWwatr(i))
<   !       s_mid(i) = min(max(s_mid(i),0.001_r_2),1._r_2)
<   !
<   !       ssnow%GWsmp(i)    = -soil%GWsucs_vec(i)*s_mid(i)**(-soil%GWbch_vec(i))
<   !       ssnow%GWsmp(i)    = max(min(ssnow%GWsmp(i),-soil%GWsucs_vec(i)),sucmin)
<   !       ssnow%GWdsmpdw(i) = -soil%GWbch_vec(i)*ssnow%GWsmp(i)/&
<   !                            (s_mid(i)*(soil%GWssat_vec(i)-soil%GWwatr(i)))
<   !    end do
<   !
<   !END SUBROUTINE calc_soil_hydraulic_props
< 
1530c1710,1719
<     !soil matric potential, hydraulic conductivity, and derivatives of each with respect to water (calculated using total (not liquid))
---
>    if (gw_params%BC_hysteresis) then
>       !swc_smp_dsmpdw => brook_corey_hysteresis_swc_smp
>       ssnow%sucs_hys(:,:) = ssnow%hys_fac(:,:)*soil%sucs_vec(:,:)
>    elseif (gw_params%HC_SWC) then
>       !swc_smp_dsmpdw => hutson_cass_swc_smp
>       ssnow%sucs_hys(:,:) = soil%sucs_vec(:,:)
>    else
>       !swc_smp_dsmpdw => brook_corey_swc_smp
>       ssnow%sucs_hys(:,:) = soil%sucs_vec(:,:)
>    end if
1531a1721
>    ! ___ MMY COMMENT: for Hutson Cass SWC potential ___
1534c1724,1746
<           ssnow%icefrac(i,k) = ssnow%wbice(i,k)/(MAX(ssnow%wb(i,k),0.01_r_2))
---
>          soil%wbc_vec(i,k) = 2.0*soil%bch_vec(i,k)*soil%ssat_vec(i,k)/&
>                                  (1.0+2.0*soil%bch_vec(i,k))
>          soil%smpc_vec(i,k) = -soil%sucs_vec(i,k) * &
>                                (2.0*soil%bch_vec(i,k)/&
>                                ((1.0+2.0*soil%bch_vec(i,k))))**(-soil%bch_vec(i,k))
>       end do
>    end do
>    do i=1,mp
>       soil%wbc_GW(i) = 2.0*soil%GWbch_vec(i)*soil%GWssat_vec(i)/&
>                                  (1.0+2.0*soil%GWbch_vec(i))
>       soil%smpc_GW(i) = -soil%GWsucs_vec(i) * &
>                                (2.0*soil%GWbch_vec(i)/&
>                                ((1.0+2.0*soil%GWbch_vec(i))))**(-soil%GWbch_vec(i))
>    end do
>   ! ___________________________________________________
>     do k=1,ms
>        do i=1,mp
>           ! _____ MMY it doesn't match to icef in SUBROUTINE ovrlndflx ______
>           !ssnow%icefrac(i,k) = ssnow%wbice(i,k)/(max(ssnow%wb(i,k),0.01_r_2)) ! MMY
>           ! ________________ MMY to unify the calculation ____________________
>           ssnow%icefrac(i,k) = max(0._r_2, min(1._r_2, &
>                                ssnow%wmice(i,k) / max(ssnow%wmtot(i,k), 0.01_r_2)) )
>           ! __________________________________________________________________
1545d1756
<        smp_cor = 8.0
1550c1761,1762
<                 hk_ice_factor(i,k) = 10.0**(-gw_params%ice_impedence)
---
>                 !hk_ice_factor(i,k) = (1.0-soil%ssat_vec(i,k))**(gw_params%ice_impedence)
>                 hk_ice_factor(i,k) = 10.0**(gw_params%ice_impedence)
1552,1555c1764,1767
<                 hk_ice_factor(i,k) = 10.0**(-gw_params%ice_impedence* &
<                      ( 0.5*(ssnow%wbice(i,k)/MAX(1.0e-8,ssnow%wb(i,k)) + &
<                      ssnow%wbice(i,kk)/MAX(1.0e-8,ssnow%wb(i,kk))) ) &
<                      )
---
>                 !hk_ice_factor(i,k) = sqrt((1.0-ssnow%wbice(i,k))**(gw_params%ice_impedence) *&
>                 !                     (1.0-ssnow%wbice(i,kk))**(gw_params%ice_impedence))
>                 hk_ice_factor(i,k) = min(10.0**(gw_params%ice_impedence*ssnow%wbice(i,k)/(soil%ssat_vec(i,k)-soil%watr(i,k))) ,&
>                                           10.0**(gw_params%ice_impedence*ssnow%wbice(i,kk)/(soil%ssat_vec(i,kk)-soil%watr(i,kk))))
1563d1774
<        smp_cor = 0.0
1578,1591d1788
<     !aquifer ice
<     wb_temp(:,ms+1) = liq_ratio(:) * wb_temp(:,ms+1)
< 
<     !potential from soil water rention function
<     !defined as layer average
<     DO k=1,ms
<        DO i=1,mp
<           s_mid(i) = (wb_temp(i,k)-soil%watr(i,k))/&  !+dri*ssnow%wbice(:,k)
<                (soil%ssat_vec(i,k)-soil%watr(i,k))
< 
<           s_mid(i) = MIN(MAX(s_mid(i),0.001_r_2),1._r_2)
< 
<           ssnow%smp(i,k) = -soil%sucs_vec(i,k)*s_mid(i)**(-soil%bch_vec(i,k))*&
<                ((1._r_2 + smp_cor*ssnow%wbice(i,k))**2.0)
1593,1606c1790,1793
<           ssnow%smp(i,k) = MAX(MIN(ssnow%smp(i,k),-soil%sucs_vec(i,k)),sucmin)
< 
<           ssnow%dsmpdw(i,k) = -soil%bch_vec(i,k)*ssnow%smp(i,k)/&
<                (MAX(s_mid(i)*(soil%ssat_vec(i,k)-soil%watr(i,k)),0.001_r_2)) *&
<                ((1._r_2 + smp_cor*ssnow%wbice(i,k))**2.0)
<        END DO
<     END DO
< 
<     !Aquifer potential
<     DO i=1,mp
<        s_mid(i) = (wb_temp(i,ms+1)-soil%GWwatr(i))/&
<             (soil%GWssat_vec(i)-soil%GWwatr(i))
<        s_mid(i) = MIN(MAX(s_mid(i),0.001_r_2),1._r_2)
<        s2(i)    = soil%GWhyds_vec(i)*s_mid(i)**(2._r_2*soil%GWbch_vec(i)+2._r_2)
---
>     !aquifer ice ! MMY should be aquifer liq
>     wb_temp(:,ms+1) = liq_ratio(:) * wb_temp(:,ms+1)
>     ! MMY for ssgw_ice_switch true, wb_temp(:,ms+1) = ssnow%GWwb(:) * wb_temp(:,ms)/max(ssnow%wb(:,ms))
>     ! MMY for ssgw_ice_switch false, wb_temp(:,ms+1) = ssnow%GWwb(:)
1608,1611c1795,1796
<        !ssnow%GWhk(i)     =s_mid(i)*s2(i) * hk_ice_factor(i,ms+1)
<        !ssnow%GWdhkdw(i)  =  (2._r_2*soil%GWbch_vec(i)+3._r_2)*&
<        !                    s2(i)*0.5_r_2/(soil%GWssat_vec(i)-soil%GWwatr(i)) *&
<        !                    hk_ice_factor(i,ms+1)
---
>     !soil potential (head) calculations can use brooks-corey
>     !or hutson-cass SWC
1613,1618c1798,1805
<        ssnow%GWhk(i)     = soil%GWhyds_vec(i) * hk_ice_factor(i,ms+1)*&
<             EXP(-ssnow%wtd(i)/1000._r_2/&
<             (1.0/(120*(soil%drain_dens(i)+1.0e-3))))
<        !d(h)*Sy=dW
<        ssnow%GWdhkdw(i)  = ssnow%GWhk(i)/(soil%GWssat_vec(i)-soil%GWwatr(i))*&
<             (0.001/(120*(soil%drain_dens(i)+1.0e-3)))
---
>     !call swc_smp_dsmpdw(soil,ssnow)
>     if (gw_params%BC_hysteresis) then
>        call brook_corey_hysteresis_swc_smp(soil,ssnow)
>     elseif (gw_params%HC_SWC) then
>        call hutson_cass_swc_smp(soil,ssnow)
>     else
>        call brook_corey_swc_smp(soil,ssnow)
>     end if
1620,1627d1806
<        s_mid(i) = (wb_temp(i,ms+1)-soil%GWwatr(i))/(soil%GWssat_vec(i)-soil%GWwatr(i))
<        s_mid(i) = MIN(MAX(s_mid(i),0.001_r_2),1._r_2)
< 
<        ssnow%GWsmp(i)    = -soil%GWsucs_vec(i)*s_mid(i)**(-soil%GWbch_vec(i))
<        ssnow%GWsmp(i)    = MAX(MIN(ssnow%GWsmp(i),-soil%GWsucs_vec(i)),sucmin)
<        ssnow%GWdsmpdw(i) = -soil%GWbch_vec(i)*ssnow%GWsmp(i)/&
<             (s_mid(i)*(soil%GWssat_vec(i)-soil%GWwatr(i)))
<     END DO
1631,1632c1810,1812
<     DO k=1,ms
<        kk=MIN(ms+1,k+1)
---
>     do k=1,ms-1
>        ! kk=min(ms+1,k+1) ! MMY
>        kk= k+1 ! MMY
1634,1635c1814
< 
<           IF (k .LT. ms) THEN
---
>            ! ____________________ MMY ______________________
1640,1645d1818
<           ELSE
<              s1(i) = 0.5_r_2*((wb_temp(i,k)-soil%watr(i,k)) + &
<                   (wb_temp(i,kk)-soil%GWwatr(i))) / &
<                   (0.5_r_2*((soil%ssat_vec(i,k)-soil%watr(i,k)) + &
<                   (soil%GWssat_vec(i)-soil%GWwatr(i))))
<           END IF
1648c1821
< 
---
>           ! _________________________________________________
1652a1826
>           ! MMY Note that the dhkdw equation doesn't exactly follow the finite difference
1672a1847,1854
> 
>            !Aquifer
> 
>           s2(i) = soil%GWhyds_vec(i)*s1(i)**(2._r_2*soil%GWbch_vec(i)+2._r_2)
>           ssnow%GWhk(i)     =s1(i)*s2(i) * hk_ice_factor(i,ms+1)
>           ssnow%GWdhkdw(i)  =  (2._r_2*soil%GWbch_vec(i)+3._r_2)*&
>                               s2(i)*0.5_r_2/(soil%GWssat_vec(i)-soil%GWwatr(i)) *&
>                               hk_ice_factor(i,ms+1)
1679c1861,2017
<   SUBROUTINE aquifer_recharge(dt,ssnow,soil,veg,zaq,zmm,dzmm)
---
> !SUBROUTINE calc_soil_hydraulic_props(ssnow,soil,veg)
> !   USE cable_common_module
> !   TYPE(soil_parameter_type), INTENT(INOUT)     :: soil
> !   TYPE(soil_snow_type)     , INTENT(INOUT)  :: ssnow
> !   TYPE(veg_parameter_type) , INTENT(INOUT)     :: veg
> !
> !   INTEGER :: i,k,kk
> !
> !   REAL(r_2), DIMENSION(mp) :: s1, &  !temporary variables for calculating hydraulic properties
> !                               s2, &
> !                               s_mid, &
> !                               liq_ratio, &
> !                               Dliq_ratio_Dz
> !
> !   REAL(r_2), DIMENSION(0:ms) :: zimm  !depths at interface between layers
> !   REAL(r_2), dimension(mp,ms+1) ::wb_temp
> !   REAL(r_2), DIMENSION(mp,ms+1) :: hk_ice_factor
> !
> !
> !    !soil matric potential, hydraulic conductivity, and derivatives of each with respect to water (calculated using total (not liquid))
> !
> !    do k=1,ms
> !       do i=1,mp
> !          ssnow%icefrac(i,k) = ssnow%wbice(i,k)/(max(ssnow%wb(i,k),0.01_r_2))
> !          ssnow%fracice(i,k) = (exp(-gw_params%IceAlpha*(1._r_2-ssnow%icefrac(i,k)))&
> !                               -exp(-gw_params%IceAlpha))/(1._r_2-exp(-gw_params%IceAlpha))
> !       end do
> !    end do
> !
> !    ssnow%fracice(:,:) = max( min( ssnow%fracice, 1._r_2), 0._r_2)
> !
> !    if (gw_params%ssgw_ice_switch) then
> !       wb_temp(:,1:ms) =  ssnow%wbliq(:,:)
> !       wb_temp(:,ms+1) = ssnow%GWwb(:)
> !       do k=1,ms
> !          kk = min(k+1,ms)
> !          do i=1,mp
> !             if (soil%isoilm(i) .eq. 9) then
> !                hk_ice_factor(i,k) = (1.0-soil%ssat_vec(i,k))**(gw_params%ice_impedence)
> !             else
> !                hk_ice_factor(i,k) = sqrt((1.0-ssnow%wbice(i,k))**(gw_params%ice_impedence) *&
> !                                     (1.0-ssnow%wbice(i,kk))**(gw_params%ice_impedence))
> !             end if
> !          end do
> !       end do
> !       hk_ice_factor(:,ms+1) = hk_ice_factor(:,ms)
> !    else
> !       wb_temp(:,1:ms) = ssnow%wb(:,:)
> !       wb_temp(:,ms+1) = ssnow%GWwb(:)
> !       do k=1,ms
> !          kk = min(k+1,ms)
> !          do i=1,mp
> !             hk_ice_factor(i,k) = (1.0 - 0.5_r_2*(ssnow%fracice(i,k)+ssnow%fracice(i,kk)))
> !          end do
> !       end do
> !       hk_ice_factor(:,ms+1) = hk_ice_factor(:,ms)
> !    end if
> !
> !    liq_ratio(:) = 1.0
> !    k = ms
> !    do i=1,mp
> !       liq_ratio(i) =min(1.,max(0.,wb_temp(i,k)/max(ssnow%wb(i,k),1e-6) ) )
> !    end do
> !    !aquifer ice
> !    wb_temp(:,ms+1) = liq_ratio(:) * wb_temp(:,ms+1)
> !
> !    !potential from soil water rention function
> !    !defined as layer average
> !    do k=1,ms
> !       do i=1,mp
> !          s_mid(i) = (wb_temp(i,k)-soil%watr(i,k))/&  !+dri*ssnow%wbice(:,k)
> !              (soil%ssat_vec(i,k)-soil%watr(i,k))
> !
> !          s_mid(i) = min(max(s_mid(i),0.001_r_2),1._r_2)
> !
> !          ssnow%smp(i,k) = -soil%sucs_vec(i,k)*s_mid(i)**(-soil%bch_vec(i,k))
> !
> !          ssnow%smp(i,k) = max(min(ssnow%smp(i,k),-soil%sucs_vec(i,k)),sucmin)
> !
> !          ssnow%dsmpdw(i,k) = -soil%bch_vec(i,k)*ssnow%smp(i,k)/&
> !                    (max(s_mid(i)*(soil%ssat_vec(i,k)-soil%watr(i,k)),0.001_r_2))
> !       end do
> !    end do
> !
> !    !Aquifer potential
> !    do i=1,mp
> !       s_mid(i) = (wb_temp(i,ms+1)-soil%GWwatr(i))/&
> !                    (soil%GWssat_vec(i)-soil%GWwatr(i))
> !       s_mid(i) = min(max(s_mid(i),0.01_r_2),1._r_2)
> !       s2(i)    = soil%GWhyds_vec(i)*s_mid(i)**(2._r_2*soil%GWbch_vec(i)+2._r_2)
> !
> !       ssnow%GWhk(i)     =s_mid(i)*s2(i) * hk_ice_factor(i,ms+1)
> !       ssnow%GWdhkdw(i)  =  (2._r_2*soil%GWbch_vec(i)+3._r_2)*&
> !                           s2(i)*0.5_r_2/(soil%GWssat_vec(i)-soil%GWwatr(i)) *&
> !                           hk_ice_factor(i,ms+1)
> !
> !
> !       s_mid(i) = (wb_temp(i,ms+1)-soil%GWwatr(i))/(soil%GWssat_vec(i)-soil%GWwatr(i))
> !       s_mid(i) = min(max(s_mid(i),0.01_r_2),1._r_2)
> !
> !       ssnow%GWsmp(i)    = -soil%GWsucs_vec(i)*s_mid(i)**(-soil%GWbch_vec(i))
> !       ssnow%GWsmp(i)    = max(min(ssnow%GWsmp(i),-soil%GWsucs_vec(i)),sucmin)
> !       ssnow%GWdsmpdw(i) = -soil%GWbch_vec(i)*ssnow%GWsmp(i)/&
> !                            (s_mid(i)*(soil%GWssat_vec(i)-soil%GWwatr(i)))
> !    end do
> !
> !    !hydraulic conductivity
> !    !Interfacial so uses layer i and i+1
> !    do k=1,ms
> !       kk=min(ms+1,k+1)
> !       do i=1,mp
> !
> !          if (k .lt. ms) then
> !          s1(i) = 0.5_r_2*((wb_temp(i,k)-soil%watr(i,k)) + &
> !                           (wb_temp(i,kk)-soil%watr(i,kk))) / &
> !                         (0.5_r_2*((soil%ssat_vec(i,k)-soil%watr(i,k)) + &
> !                         (soil%ssat_vec(i,kk)-soil%watr(i,kk))))
> !          else
> !          s1(i) = 0.5_r_2*((wb_temp(i,k)-soil%watr(i,k)) + &
> !                           (wb_temp(i,kk)-soil%GWwatr(i))) / &
> !                         (0.5_r_2*((soil%ssat_vec(i,k)-soil%watr(i,k)) + &
> !                         (soil%GWssat_vec(i)-soil%GWwatr(i))))
> !          end if
> !          s1(i) = min(max(s1(i),0.01_r_2),1._r_2)
> !          s2(i) = soil%hyds_vec(i,k)*s1(i)**(2._r_2*soil%bch_vec(i,k)+2._r_2)
> !
> !          ssnow%hk(i,k)    =  s1(i)*s2(i)*hk_ice_factor(i,k)
> !          ssnow%dhkdw(i,k) = (2._r_2*soil%bch_vec(i,k)+3._r_2)*s2(i)*&
> !                            0.5_r_2/(soil%ssat_vec(i,k)-soil%watr(i,k))*&
> !                            hk_ice_factor(i,k)
> !       end do
> !    end do
> !
> !    !conductivity between soil column and aquifer
> !    k = ms
> !    kk = ms+1
> !       do i=1,mp
> !
> !          s1(i) = 0.5_r_2*(max(wb_temp(i,k )-soil%watr(i,k),0.) + &
> !                           max(wb_temp(i,kk)-soil%GWwatr(i),0.)) / &
> !                  (0.5_r_2*(soil%ssat_vec(i,k)-soil%watr(i,k) +&
> !                            soil%GWssat_vec(i)-soil%GWwatr(i)))
> !
> !          s1(i) = min(max(s1(i),0.01_r_2),1._r_2)
> !          s2(i) = soil%hyds_vec(i,k)*s1(i)**(2._r_2*soil%bch_vec(i,k)+2._r_2)
> !
> !          ssnow%hk(i,k)    = s1(i)*s2(i)*hk_ice_factor(i,k)
> !          ssnow%dhkdw(i,k) = (2._r_2*soil%bch_vec(i,k)+3._r_2)*&
> !                             hk_ice_factor(i,k)*&
> !                             s2(i)*0.5_r_2/(soil%ssat_vec(i,k)-soil%watr(i,k))
> !       end do
> !
> !
> !END SUBROUTINE calc_soil_hydraulic_props
> 
> 
>   SUBROUTINE aquifer_recharge(dt,ssnow,soil,veg)
1687,1688c2025,2026
<     REAL(r_2), DIMENSION(:), INTENT(in)       :: zaq
<     REAL(r_2), DIMENSION(:), INTENT(in)       :: zmm,dzmm
---
>     REAL(r_2), dimension(mp)   :: zaq
>     REAL(r_2), dimension(mp,ms) :: zmm,csum_dzmm
1690c2028,2033
<     INTEGER :: i
---
>     integer :: i,k
> 
>     csum_dzmm(:,1) = m2mm*soil%zse_vec(:,1)
>     do k=2,ms
>        csum_dzmm(:,k) = csum_dzmm(:,k-1) + m2mm*soil%zse_vec(:,k)
>     end do
1692a2036,2039
>     select case (gw_params%aquifer_recharge_function)
>        case(0)
>           ssnow%Qrecharge(:) = 0._r_2
>        case(1)
1694c2041
<        IF ((ssnow%wtd(i) .LE. SUM(dzmm,dim=1)) .OR. &
---
>              if ((ssnow%wtd(i) .le. csum_dzmm(i,ms-1)) .or. &
1700c2047
<           ssnow%Qrecharge(i) = -0.5*(ssnow%hk(i,ms)*ssnow%GWhk(i))*&
---
>                 ssnow%Qrecharge(i) = -0.5*(ssnow%hk(i,ms)+ssnow%GWhk(i))*&
1704c2051
<                (zmm(ms)-0.5*soil%zse_vec(i,ms)*1000.0))
---
>                                        (csum_dzmm(i,ms)-0.5*soil%zse_vec(i,ms)*m2mm))
1707a2055,2069
>        case default
>           do i=1,mp
>              if ((ssnow%wtd(i) .le. csum_dzmm(i,ms)) .or. &
>                  (veg%iveg(i) .ge. 16) .or. &
>                  (soil%isoilm(i) .eq. 9))  then
> 
>                 ssnow%Qrecharge(i) = 0._r_2
>              else
>                 ssnow%Qrecharge(i) = -(ssnow%hk(i,ms)+ssnow%GWhk(i))*&
>                                      ((ssnow%GWsmp(i)-ssnow%smp(i,ms)) -&
>                                       (ssnow%GWzq(i)-ssnow%zq(i,ms))) / &
>                                      (m2mm*(soil%GWdz(i)+soil%zse_vec(i,ms)))
>              end if
>           end do
>     end select
1711c2073
<   SUBROUTINE subsurface_drainage(ssnow,soil,veg,dzmm)
---
>   SUBROUTINE subsurface_drainage(ssnow,soil,veg)
1719d2080
<     REAL(r_2), DIMENSION(:), INTENT(in)       :: dzmm
1722,1723c2083,2084
<     REAL(r_2), DIMENSION(mp,ms)               :: ice_factor  !ice limitation on
<     !subsurface drainage
---
>     REAL(r_2), dimension(mp,ms)               :: ice_factor,&  !ice limitation on
>                                                  dzmm !subsurface drainage
1731a2093,2095
> 
>     dzmm(:,:) = m2mm*soil%zse_vec(:,:)
> 
1736,1740c2100,2102
<        ssnow%qhz(i)  = MIN(MAX(soil%slope(i),0.000001),0.9)*&
<             gw_params%MaxHorzDrainRate* &
<             EXP(-ssnow%wtd(i)/1000._r_2/&
<             (1.0/(60.0*gw_params%EfoldHorzDrainRate*&
<             (soil%drain_dens(i)+1.0e-3))*Efold_mod(veg%iveg(i))))
---
>        ssnow%qhz(i)  = soil%slope(i)*soil%qhz_max(i)*&
>                         exp( -mm2m*ssnow%wtd(i)/ soil%qhz_efold(i) )
>        ! MMY have no idea where the equation comes from, doubtful
1742,1743d2103
< 
<        IF (gw_params%subsurface_sat_drainage) THEN
1747c2107
<              IF (ssnow%wtd(i) .LE. SUM(dzmm(1:k),dim=1)) THEN
---
>           if (ssnow%wtd(i) .le. sum(dzmm(i,1:k),dim=1)) then
1752,1754d2111
<        ELSE
<           k_drain(i) = 2
<        END IF
1761,1762c2118
<              ice_factor(i,k) = (10.0**(-gw_params%ice_impedence*ssnow%wbice(i,k)/&
<                   (ssnow%wb(i,k)+1.0e-12)))
---
>             ice_factor(i,k) = (1.0-ssnow%wbice(i,k))**gw_params%ice_impedence
1773d2128
<     DO i=1,mp
1775,1780c2130,2131
<        ice_factor(i,:)  = 0._r_2
<        ice_factor_tot(i)= 0._r_2
<        ssnow%qhlev(i,:) = 0._r_2
<        sm_tot(i)        = 0._r_2
< 
<     END DO
---
>    ssnow%qhlev(:,:) = 0._r_2
>    sm_tot(:)        = 1._r_2
1785,1793c2136,2139
<           sm_tot(i) = MAX((ssnow%GWwb(i) - soil%watr(i,ms)),0._r_2)*&
<                ice_factor(i,ms)
< 
<           ice_factor_tot(i) = (SUM(ice_factor(i,k_drain(i):ms)*&
<                soil%zse_vec(i,k_drain(i):ms),dim=1)+&
<                ice_factor(i,ms)*soil%GWdz(i))/&
<                (SUM(soil%zse_vec(i,:),dim=1)+&
<                soil%GWdz(i))
< 
---
>           ! MMY it doesn't make sense since sm_tot == 0.
>           ! sm_tot(i) = sum(ssnow%qhlev(i,k_drain(i):ms+1),dim=1) ! MMY
>           ! ______ MMY find this calculation from version : cable-2.2.3-pore-scale-model _______________
>           sm_tot(i) = max(ssnow%GWwb(i)-soil%GWwatr(i),0._r_2)
1795,1796c2141,2147
<              sm_tot(i) = sm_tot(i) + MAX(ssnow%wbliq(i,k)-soil%watr(i,k),0._r_2)*&
<                   ice_factor(i,k)
---
>             sm_tot(i) = sm_tot(i) + max(ssnow%wbliq(i,k)-soil%watr(i,k),0._r_2)!*dzmm(k)
>           end do
>           ! ____________________________________________________________________________________________
>           if (sm_tot(i) .lt. 1.0e-8) then
>              sm_tot(i) = 1._r_2
>           end if
>        end if
1799d2149
<           ssnow%qhz(i) = ssnow%qhz(i)*ice_factor_tot(i)  !reduced due to ice
1801,1808c2151
<           IF (sm_tot(i) .GE. 1.0e-12) THEN
<              DO k=k_drain(i),ms
<                 ssnow%qhlev(i,k) = ssnow%qhz(i)*ice_factor(i,k)*&
<                      MAX(0.0,ssnow%wbliq(i,k)-soil%watr(i,k))/sm_tot(i)
<              END DO
<              ssnow%qhlev(i,ms+1) = MAX((ssnow%GWwb(i) - soil%watr(i,ms)),0.0)*&
<                   ice_factor(i,ms)*ssnow%qhz(i)/sm_tot(i)
<           ENDIF
---
>    do i=1,mp
1810,1818c2153,2154
<        ELSE  !second option
<           IF (k_drain(i) .LE. ms) THEN
<              DO k=k_drain(i),ms
<                 sm_tot(i) = sm_tot(i) + MAX(ssnow%wbliq(i,k)-soil%watr(i,k),0._r_2)*&
<                      ice_factor(i,k)
<              END DO
<              ice_factor_tot(i) = (SUM(ice_factor(i,k_drain(i):ms)*&
<                   soil%zse_vec(i,k_drain(i):ms),dim=1))/&
<                   (SUM(soil%zse_vec(i,:),dim=1))
---
>        ssnow%qhlev(i,ms+1) = max((ssnow%GWwb(i) - soil%GWwatr(i)),0._r_2)*&
>                        ice_factor(i,ms)*ssnow%qhz(i)/sm_tot(i)
1820,1821d2155
<              ssnow%qhz(i) = ssnow%qhz(i)*ice_factor_tot(i)  !reduced due to ice
<              IF (sm_tot(i) .GE. 1.0e-12) THEN
1823,1824c2157,2158
<                    ssnow%qhlev(i,k) = (ssnow%qhz(i)*ice_factor(i,k)/sm_tot(i))*&
<                         MAX(0.0,ssnow%wbliq(i,k)-soil%watr(i,k))
---
>           ssnow%qhlev(i,k) = max(ssnow%wbliq(i,k)-ssnow%watr_hys(i,k),0._r_2)*&
>                                    ice_factor(i,k)*ssnow%qhz(i)/sm_tot(i)
1826,1831d2159
<              ENDIF
< 
<           ELSE
<              ice_factor_tot(i) = ice_factor(i,ms)
<              ssnow%qhz(i)        = ssnow%qhz(i)*ice_factor_tot(i)
<              ssnow%qhlev(i,ms+1) = ssnow%qhz(i)*MAX(ssnow%GWwb(i)-soil%watr(i,ms),0.0)
1833,1835d2160
<           END IF
< 
<        END IF
1861,1870d2185
<     !if !gw_model and !or_evap:
<     !in cable_um_init_subrs.F90 or cable_parameters:
<     !  ssat_vec(i,:) = ssat
<     !  zse_vec(i,:)  = zse
<     !  UM: slope_std read in
<     ! offline: slope_std read in or set to const
<     !  all gw_params set by default in cable_common
<     ! doesn do anything but cannot hurt
< 
< 
1874,1875c2189,2190
<             (ssnow%wb(:,k)-ssnow%wbice(:,k)-soil%watr(:,k))/&
<             MAX(0.001,soil%ssat_vec(:,k)-soil%watr(:,k)) ) )*soil%zse_vec(:,k)
---
>               (ssnow%wb(:,k)-den_rat*ssnow%wbice(:,k)-ssnow%watr_hys(:,k))/&
>                max(0.001,ssnow%ssat_hys(:,k)-soil%watr(:,k)-den_rat*ssnow%wbice(:,k)) ) )*soil%zse_vec(:,k)
1884c2199
<                1e-5),10000._r_2)) ! ensure some variability
---
>                            1e-5),10000.0)) ! ensure some variability
1887c2202
<                1._r_2 - my_erf( slopeSTDmm / SQRT(2.0* S(i)) ) ) )
---
>                                    1._r_2 - my_erf( slopeSTDmm * sqrt(2.0* S(i)) ) ) ) ! MMY change / to *@24 Sep 2021
1903a2219
>     INTEGER :: i
1908,1910c2224
<     REAL(r_2), DIMENSION(mp,ms) :: ones
< 
<     INTEGER :: i
---
>     REAL(r_2), DIMENSION(mp,ms) :: minus_ones
1912c2226
<     CALL point2constants( C )
---
>     !CALL point2constants( C )
1920a2235
>     minus_ones = -1.
1926c2241
<           unsat_wb(i) =  (ssnow%wb(i,1) - soil%ssat_vec(i,1)*&
---
>           unsat_wb(i) =  (ssnow%wb(i,1) - ssnow%ssat_hys(i,1)*&
1928,1929c2243,2245
< 
<           unsat_wb(i) = MAX(soil%watr(i,1)+1e-2, MIN(soil%ssat_vec(i,1), unsat_wb(i) ) )
---
>           ! MMY ??? I'm not sure whether we should take wbice*den_rat into consideration here,
>           !     ??? so I didn't modify.
>           unsat_wb(i) = max(ssnow%watr_hys(i,1)+1e-2, min(ssnow%ssat_hys(i,1), unsat_wb(i) ) )
1936c2252
<           unsat_smp(i) = SIGN(soil%sucs_vec(i,1),ones(i,1)) * MIN(1.0, &
---
>           unsat_smp(i) = SIGN(soil%sucs_vec(i,1),minus_ones(i,1)) * MIN(1.0, &
1968c2284,2288
<     CALL point2constants( C )
---
>     !CALL point2constants( C )
> 
>     ssnow%sucs_hys = soil%sucs_vec
>     ssnow%ssat_hys = soil%ssat_vec
>     ssnow%watr_hys = soil%watr
1976,1978c2296
<     dzmm = REAL(soil%zse(:),r_2)*1000._r_2
< 
<     CALL subsurface_drainage(ssnow,soil,veg,dzmm)
---
>     CALL subsurface_drainage(ssnow,soil,veg)
1980,1983c2298
<     zmm(:) = 1000._r_2*(SUM(REAL(soil%zse,r_2),dim=1))
<     zaq(:) = zmm(:) + 0.5_r_2*soil%GWdz(:)*1000._r_2
< 
<     CALL aquifer_recharge(dels,ssnow,soil,veg,zaq,zmm,zmm)
---
>     call aquifer_recharge(dels,ssnow,soil,veg)
1991a2307
>     ! MMY Actually, this subrountine is called by nowhere
2032a2349,2823
> 
> 
>    subroutine brook_corey_swc_smp(soil,ssnow)
>       type(soil_parameter_type), intent(inout) :: soil
>       type(soil_snow_type),      intent(inout) :: ssnow
> 
>       real(r_2), dimension(mp,ms+1) :: wb_temp
>       real(r_2), dimension(mp) :: s_mid
>       integer :: i,k
> 
>       if (gw_params%ssgw_ice_switch) then
>          wb_temp(:,1:ms) = ssnow%wbliq(:,:)
>          wb_temp(:,ms+1) = ssnow%GWwb(:)
>          do i=1,mp
>           if (ssnow%wb(i,ms) .gt. 1.0e-8) then
>             wb_temp(i,ms+1) = ssnow%GWwb(i) * ssnow%wbliq(i,ms)/ssnow%wb(i,ms)
>           end if
>          end do
>       else
>          wb_temp(:,1:ms) = ssnow%wb(:,:)
>          wb_temp(:,ms+1) = ssnow%GWwb(:)
>       end if
>      !potential from soil water rention function
>      !defined as layer average
>      do k=1,ms
>         do i=1,mp
>            s_mid(i) = (wb_temp(i,k)-soil%watr(i,k))/&  !+dri*ssnow%wbice(:,k)
>                (soil%ssat_vec(i,k)-soil%watr(i,k))
> 
>            s_mid(i) = min(max(s_mid(i),0.01_r_2),1._r_2)
> 
>            ssnow%smp(i,k) = -soil%sucs_vec(i,k)*s_mid(i)**(-soil%bch_vec(i,k))
> 
>            ssnow%smp(i,k) = max(min(ssnow%smp(i,k),-soil%sucs_vec(i,k)),sucmin)
> 
>            ssnow%dsmpdw(i,k) = -soil%bch_vec(i,k)*ssnow%smp(i,k)/&
>                              (max(s_mid(i)*(wb_temp(i,k)-soil%watr(i,k)),0.01_r_2)) !MMY
>                      ! MMY BUG in (max(s_mid(i)*(soil%ssat_vec(i,k)-soil%watr(i,k)),0.01_r_2))
>         end do
>      end do
>      ! _____________________ MMY BUG it forgot to calculate the aquifer __________________
>           !Aquifer potential
>           do i=1,mp
>              s_mid(i) = (wb_temp(i,ms+1)-soil%GWwatr(i))/(soil%GWssat_vec(i)-soil%GWwatr(i))
>              s_mid(i) = min(max(s_mid(i),0.001_r_2),1._r_2)
> 
>              ssnow%GWsmp(i)    = -soil%GWsucs_vec(i)*s_mid(i)**(-soil%GWbch_vec(i))
>              ssnow%GWsmp(i)    = max(min(ssnow%GWsmp(i),-soil%GWsucs_vec(i)),sucmin)
>              ssnow%GWdsmpdw(i) = -soil%GWbch_vec(i)*ssnow%GWsmp(i)/&
>                                   (max(s_mid(i)*(wb_temp(i,ms+1)-soil%GWwatr(i)),0.01_r_2)) !MMY
>           end do
>      ! ____________________________________________________________________________________
>   end subroutine brook_corey_swc_smp
> 
>    subroutine hutson_cass_swc_smp(soil,ssnow)
>       type(soil_parameter_type), intent(inout) :: soil
>       type(soil_snow_type),      intent(inout) :: ssnow
> 
>       real(r_2), dimension(mp,ms+1) :: wb_temp
>       real(r_2), dimension(mp) :: s_mid
>       integer :: i,k
> 
>    do k=1,ms
>       do i=1,mp
>          soil%wbc_vec(i,k) = 2.0*soil%bch_vec(i,k)*soil%ssat_vec(i,k)/&
>                                  (1.0+2.0*soil%bch_vec(i,k))
>          soil%smpc_vec(i,k) = -soil%sucs_vec(i,k) * &
>                                (2.0*soil%bch_vec(i,k)/&
>                                ((1.0+2.0*soil%bch_vec(i,k))))**(-soil%bch_vec(i,k))
>       end do
>    end do
> 
>    do i=1,mp
>       soil%wbc_GW(i) = 2.0*soil%GWbch_vec(i)*soil%GWssat_vec(i)/&
>                                  (1.0+2.0*soil%GWbch_vec(i))
>       soil%smpc_GW(i) = -soil%GWsucs_vec(i) * &
>                                (2.0*soil%GWbch_vec(i)/&
>                                ((1.0+2.0*soil%GWbch_vec(i))))**(-soil%GWbch_vec(i))
>    end do
>     !potential from soil water rention function
>     !defined as layer average
>     do k=1,ms
>        do i=1,mp
>           s_mid(i) = (wb_temp(i,k)-soil%watr(i,k))/&  !+dri*ssnow%wbice(:,k)
>               (soil%ssat_vec(i,k)-soil%watr(i,k))
> 
>           s_mid(i) = min(max(s_mid(i),0.01_r_2),0.9999999_r_2)
> 
>           if (wb_temp(i,k) .lt. soil%wbc_vec(i,k)) then
>              ssnow%smp(i,k) = -soil%sucs_vec(i,k)*s_mid(i)**(-soil%bch_vec(i,k))
> 
>              ssnow%smp(i,k) = max(min(ssnow%smp(i,k),-soil%sucs_vec(i,k)),sucmin)
> 
>              ssnow%dsmpdw(i,k) = -soil%bch_vec(i,k)*ssnow%smp(i,k)/&
>                                (max(s_mid(i)*(wb_temp(i,k)-soil%watr(i,k)),0.001_r_2)) ! MMY
>                                ! MMY BUG in (max(s_mid(i)*(soil%ssat_vec(i,k)-soil%watr(i,k)),0.001_r_2))
>           else
>             !!! MMY BUG: in Hutson & Cass 1987 using 'wb/ssat' as independent factor
>             !!! MMY      but here Mark uses effective saturation (wb-watr)/(ssat-watr)
>             !!! MMY      in wet soil and wb/ssat in wet soil. This leads to a iscontinuity
>             !!! MMY      in the water retention curve (smp-wb relationship), and causes
>             !!! MMY      abs(smp) in wet soil is larger than in dry soil. I suggest to
>             !!! MMY      use wb/ssat in HC_SWC
>              ssnow%smp(i,k) = -soil%sucs_vec(i,k)* sqrt(1._r_2 - wb_temp(i,k)/soil%ssat_vec(i,k))/&
>                                (sqrt(1._r_2-soil%wbc_vec(i,k)/soil%ssat_vec(i,k))*&
>                               ( (soil%wbc_vec(i,k)/soil%ssat_vec(i,k))**soil%bch_vec(i,k) ))
> 
>              ssnow%dsmpdw(i,k) = -ssnow%smp(i,k)/(soil%ssat_vec(i,k)*&
>                                 (1._r_2 - wb_temp(i,k)/soil%ssat_vec(i,k)) )
>           end if
>        end do
>     end do
> 
>     !Aquifer potential
>     do i=1,mp
>        s_mid(i) = (wb_temp(i,ms+1)-soil%GWwatr(i))/(soil%GWssat_vec(i)-soil%GWwatr(i))
>        s_mid(i) = min(max(s_mid(i),0.01_r_2),1._r_2)
>        if (wb_temp(i,ms+1) .lt. soil%wbc_GW(i)) then
>           ssnow%GWsmp(i) = -soil%GWsucs_vec(i)*s_mid(i)**(-soil%GWbch_vec(i))
> 
>           ssnow%GWsmp(i) = max(min(ssnow%GWsmp(i),-soil%GWsucs_vec(i)),sucmin)
> 
>           ssnow%GWdsmpdw(i) = -soil%GWbch_vec(i)*ssnow%GWsmp(i)/&
>                     (max(s_mid(i)*(soil%GWssat_vec(i)-soil%GWwatr(i)),0.001_r_2))
>        else
>           ssnow%GWsmp(i) = -soil%GWsucs_vec(i)* sqrt(1._r_2 - wb_temp(i,ms+1)/soil%GWssat_vec(i))/&
>                             (sqrt(1._r_2-soil%wbc_GW(i)/soil%GWssat_vec(i))*&
>                            ( (soil%wbc_GW(i)/soil%GWssat_vec(i))**soil%GWbch_vec(i) ))
> 
>           ssnow%GWsmp(i) = max(min(ssnow%GWsmp(i),-soil%GWsucs_vec(i)),sucmin)
> 
>           ssnow%GWdsmpdw(i) = -ssnow%GWsmp(i)/(soil%GWssat_vec(i)*&
>                              (1._r_2 - wb_temp(i,ms+1)/soil%GWssat_vec(i)) )
>        end if
>     end do
>    end subroutine hutson_cass_swc_smp
> 
>    subroutine brook_corey_hysteresis_swc_smp(soil,ssnow)
>    type(soil_parameter_type), intent(inout) :: soil
>    type(soil_snow_type),      intent(inout) :: ssnow
> 
>    real(r_2), dimension(mp,ms) :: delta_wbliq
>    real(r_2), dimension(mp) :: s_mid
>    integer :: i,k,klev
>    real(r_2), dimension(mp,ms+1) :: wb_temp
>    real(r_2) :: tmp_smp
> 
>       if (gw_params%ssgw_ice_switch) then
>          wb_temp(:,1:ms) = ssnow%wbliq(:,:)
>          wb_temp(:,ms+1) = ssnow%GWwb(:) * ssnow%wbliq(:,ms)/soil%ssat_vec(:,ms)
>       else
>          wb_temp(:,1:ms) = ssnow%wb(:,:)
>          wb_temp(:,ms+1) = ssnow%GWwb(:)
>       end if
> 
>      !ensure sucs_hys is set
>      ssnow%sucs_hys = ssnow%hys_fac * soil%sucs_vec
> !    do k=1,ms
> !       do i=1,mp
> !          !on dry or wet?
> !          IF (ssnow%hys_fac(i,k) .gt. 0.75) then
> !             !on drying
> !             ssnow%watr_hys(i,k) = soil%watr(i,k)
> !             ssnow%hys_fac(i,k)      = 1.0  !drying
> !             ssnow%sucs_hys(i,k) = ssnow%hys_fac(i,k)*soil%sucs_vec(i,k)
> !             if (ssnow%smp_hys(i,k) .lt. -ssnow%sucs_hys(i,k)) then
> !                tmp_smp = (min(0.99,-ssnow%smp_hys(i,k)/ssnow%sucs_hys(i,k)))**(-soil%bch_vec(i,k))
> !                ssnow%ssat_hys(i,k) = (ssnow%wb_hys(i,k)  - ssnow%watr_hys(i,k)*(1.0-tmp_smp))/&
> !                                       tmp_smp
> !             else
> !                ssnow%ssat_hys(i,k) = ssnow%wb_hys(i,k)
> !             end if
> !             ssnow%ssat_hys(i,k) = max(0.001+ssnow%watr_hys(i,k),ssnow%ssat_hys(i,k))
> !
> !          ELSE  !wetting
> !             ssnow%ssat_hys(i,k) = gw_params%ssat_wet_factor*soil%ssat_vec(i,k)
> !             ssnow%hys_fac(i,k)        = 0.5  !wetting
> !             ssnow%sucs_hys(i,k) = ssnow%hys_fac(i,k)*soil%sucs_vec(i,k)
> !
> !             if (ssnow%smp_hys(i,k) .lt. -ssnow%sucs_hys(i,k) ) then
> !                tmp_smp = (min(0.99,-ssnow%smp_hys(i,k)/ssnow%sucs_hys(i,k)))**(-soil%bch_vec(i,k))
> !                ssnow%watr_hys(i,k) = (ssnow%wb_hys(i,k) - ssnow%ssat_hys(i,k) *tmp_smp)/&
> !                                      (1._r_2 - tmp_smp)
> !             else
> !                ssnow%watr_hys(i,k) = soil%watr(i,k)
> !             end if
> !
> !             ssnow%watr_hys(i,k) = max(0._r_2,min(ssnow%ssat_hys(i,k)-0.001, ssnow%watr_hys(i,k) ) )
> !          END IF
> !       END DO
> !    END DO
> 
>     do k=1,ms
>        do i=1,mp
>           s_mid(i) = (wb_temp(i,k)        - ssnow%watr_hys(i,k)) / &
>                      (ssnow%ssat_hys(i,k) - ssnow%watr_hys(i,k))
> 
>           s_mid(i) = min(max(s_mid(i),0.01_r_2),1._r_2)
>           ! MMY ??? why 0.01_r_2 here but 0.001_r_2 in aquifer
>           ssnow%smp(i,k) = -ssnow%sucs_hys(i,k)*s_mid(i)**(-soil%bch_vec(i,k))
> 
>           ssnow%smp(i,k) = max(min(ssnow%smp(i,k),-ssnow%sucs_hys(i,k)),sucmin)
> 
>           ssnow%dsmpdw(i,k) = -soil%bch_vec(i,k)*ssnow%smp(i,k)/s_mid(i)
>        end do
>     end do
> 
>     !Aquifer potential
>     do i=1,mp
>        s_mid(i) = (wb_temp(i,ms+1)-soil%GWwatr(i))/(soil%GWssat_vec(i)-soil%GWwatr(i))
>        s_mid(i) = min(max(s_mid(i),0.001_r_2),1._r_2)
>        ! MMY ???
>        ssnow%GWsmp(i)    = -soil%GWsucs_vec(i)*s_mid(i)**(-soil%GWbch_vec(i))
>        ssnow%GWsmp(i)    = max(min(ssnow%GWsmp(i),-soil%GWsucs_vec(i)),sucmin)
>        ssnow%GWdsmpdw(i) = -soil%GWbch_vec(i)*ssnow%GWsmp(i)/&
>                         (max(s_mid(i)*(wb_temp(i,ms+1)-soil%GWwatr(i)),0.01_r_2)) !MMY
>     end do
> 
>   end subroutine brook_corey_hysteresis_swc_smp
> 
> subroutine swc_hyst_direction(soil,ssnow,veg)
>    type(soil_parameter_type), intent(inout) :: soil
>    type(soil_snow_type),      intent(inout) :: ssnow
>    TYPE(veg_parameter_type) , INTENT(INOUT)    :: veg  ! veg parameters
> 
>    real(r_2), dimension(mp,ms) :: delta_wbliq,psi_tmp
>    integer :: i,k,klev
>    real(r_2) :: tmp_smp
> 
>    delta_wbliq = ssnow%wbliq - ssnow%wbliq_old
>    !soil hydraulic state/props  so smp out matches the wb out
>    !call swc_smp_dsmpdw(soil,ssnow)
>    if (gw_params%BC_hysteresis) then
>       call brook_corey_hysteresis_swc_smp(soil,ssnow)
>    elseif (gw_params%HC_SWC) then
>       call hutson_cass_swc_smp(soil,ssnow)
>    else
>       call brook_corey_swc_smp(soil,ssnow)
>    end if
> 
>      !switch drying/wetting curve
>     do k=1,ms
>        do i=1,mp
>           if (delta_wbliq(i,k) .gt. 0.0 .and. &
>               ssnow%hys_fac(i,k) .gt. 0.75.and.&
>               ssnow%wb(i,k).lt.gw_params%ssat_wet_factor * soil%ssat_vec(i,k)) then  !avoid testing .eq. 1.0
>            !layer was drying now it is wetting!
>               ssnow%smp_hys(i,k) = ssnow%smp(i,k)
>               ssnow%wb_hys(i,k)  = ssnow%wb(i,k)
>               ssnow%ssat_hys(i,k)= gw_params%ssat_wet_factor * soil%ssat_vec(i,k)
>               ssnow%hys_fac(i,k) = 0.5
>               ssnow%sucs_hys(i,k) = ssnow%hys_fac(i,k)*soil%sucs_vec(i,k)
>           elseif (delta_wbliq(i,k) .le. 0.0 .and. &
>                   ssnow%hys_fac(i,k) .lt. 0.75 .and.&
>                   ssnow%wb(i,k) .gt. soil%watr(i,k)) then
>              !swtiched wetting to drying
>              ssnow%smp_hys(i,k) = ssnow%smp(i,k)
>              ssnow%wb_hys(i,k)  = ssnow%wb(i,k)
>              ssnow%hys_fac(i,k) = 1.0
>              ssnow%sucs_hys(i,k) = ssnow%hys_fac(i,k)*soil%sucs_vec(i,k)
>           end if
> 
>           if (delta_wbliq(i,k) .gt. 0.0) then
> 
>              ssnow%ssat_hys(i,k)= gw_params%ssat_wet_factor * soil%ssat_vec(i,k)
>              if (ssnow%smp_hys(i,k) .lt. -ssnow%sucs_hys(i,k) ) then
> 
>                 tmp_smp = (min(0.99,-ssnow%smp_hys(i,k)/ssnow%sucs_hys(i,k)))**(-soil%bch_vec(i,k))
>                 ssnow%watr_hys(i,k) = (ssnow%wb_hys(i,k) - soil%ssat_vec(i,k) * tmp_smp)/&
>                                      (1.0 - tmp_smp)
>              else
>                 ssnow%watr_hys(i,k) = ssnow%wb_hys(i,k)
>              end if
> 
>              ssnow%watr_hys(i,k) = max(0._r_2,min(ssnow%ssat_hys(i,k)-0.001, ssnow%watr_hys(i,k) ) )
> 
>           else !drying ! MMY add a space
>              ssnow%watr_hys(i,k)= soil%watr(i,k)  !this is how we tell if drying
>                                                !watr_hys .eq. watr
>              if (ssnow%smp_hys(i,k) .lt. -ssnow%sucs_hys(i,k)) then
>                 tmp_smp = (min(0.99,-ssnow%smp_hys(i,k)/ssnow%sucs_hys(i,k)))**(-soil%bch_vec(i,k))
>                 ssnow%ssat_hys(i,k) = (ssnow%wb_hys(i,k)  - soil%watr(i,k)*(1.0-tmp_smp))/&
>                                        tmp_smp
>              else
>                 ssnow%ssat_hys(i,k) = ssnow%wb_hys(i,k)
>              end if
> 
>              ssnow%ssat_hys(i,k) = max(ssnow%watr_hys(i,k)+0.001,ssnow%ssat_hys(i,k))
>           end if
> 
>        end do
>     end do
> 
>   if (cable_user%gw_model .and. gw_params%bc_hysteresis) then
>       do klev=1,ms
>          do i=1,mp
>             if (soil%isoilm(i) .ne. 9 .and. veg%iveg(i) .le. 16) then
> 
>                psi_tmp(i,klev) = abs(psi_c(veg%iveg(i)))
> 
>                soil%swilt_vec(i,klev) = (ssnow%ssat_hys(i,klev)-ssnow%watr_hys(i,klev)) * &
>                                         (psi_tmp(i,klev)/soil%sucs_vec(i,klev))&
>                                          **(-1.0/soil%bch_vec(i,klev))+&
>                                         ssnow%watr_hys(i,klev)
>                soil%sfc_vec(i,klev) = (gw_params%sfc_vec_hk/soil%hyds_vec(i,klev))&
>                                        **(1.0/(2.0*soil%bch_vec(i,klev)+3.0)) *&
>                                        (ssnow%ssat_hys(i,klev)-ssnow%watr_hys(i,klev)) + ssnow%watr_hys(i,klev)
>             end if
>         end do
>      end do
> 
>    end if
> 
>     end subroutine swc_hyst_direction
> 
> !`!taken from
> !`!/g/data1/w35/mrd561/CABLE/CMIP6-GM2_dev_testing_tiles/core/biogeophys
> !`! to test
> !`SUBROUTINE GWsoilfreeze(dels, soil, ssnow)
> !`  !NOTE: this is only included because gw_model uses parameters XXX_vec
> !`  !these are r_2.  this breaks bitwise compatibility with trunk
> !`  !if acceptable this routine does the same thing but with r_2 soil params
> !`  ! if max_ice_frac always set to frozen_limit and tgg_tmp is always C%TFRZ
> !`
> !`   REAL, INTENT(IN)                    :: dels ! integration time step (s)
> !`   TYPE(soil_snow_type), INTENT(INOUT)      :: ssnow
> !`   TYPE(soil_parameter_type), INTENT(INOUT)    :: soil
> !`   REAL     , DIMENSION(mp,ms) :: tgg_old,tgg_new,tgg_tmp !tgg_old is previous point of when crosses freezing
> !`   REAL(r_2), DIMENSION(mp,ms)           :: sicefreeze
> !`   REAL(r_2), DIMENSION(mp,ms)           :: sicemelt
> !`   REAL(r_2), DIMENSION(mp,ms)        :: wbice_delta,avail_por,delta_ice_vol
> !`   REAL(r_2), DIMENSION(mp)           :: ice_mass,liq_mass,tot_mass
> !`   INTEGER :: i,j,k
> !`   REAL(r_2) :: func,funcderv,Aconst,Dconst,t_zero,t_one,dtmp
> !`   REAL, DIMENSION(mp,ms) :: gammzz_snow
> !`   REAL(r_2),DIMENSION(mp,ms) :: xx,max_ice_frac,iceF,den_css  !Decker and Zeng 20.9
> !`   REAL(r_2) :: delta_wbliq,tmp_var
> !`
> !`   max_ice_frac(:,:) = zero
> !`   delta_ice_vol(:,:) = zero
> !`   tgg_old(:,:) = ssnow%otgg(:,:)
> !`   tgg_new(:,:) = ssnow%tgg(:,:)
> !`   tgg_tmp(:,:) = tgg_old(:,:)
> !`
> !`   gammzz_snow(:,:) = zero
> !`   k=1
> !`   do i=1,mp
> !`      if (ssnow%isflag(i) .eq. zero.and. soil%isoilm(i) .ne. 9) then
> !`           gammzz_snow(i,k) = real(C%cgsnow,r_2) * real(ssnow%snowd(i),r_2)
> !`      end if
> !`   end do
> !`
> !`   sicefreeze(:,:) = -1._r_2
> !`   sicemelt(:,:) = -1._r_2
> !`
> !`   do k=1,ms
> !`   do i=1,mp
> !`
> !`      ssnow%wmice(i,k)  = ssnow%wbice(i,k)*soil%zse_vec(i,k)*real(C%density_ice,r_2)
> !`      ssnow%wmliq(i,k)  = ssnow%wbliq(i,k)*soil%zse_vec(i,k)*real(C%density_liq,r_2)
> !`      ssnow%wmtot(i,k)  = ssnow%wmice(i,k) + ssnow%wmliq(i,k)
> !`
> !`      if  ((ssnow%tgg(i,k) .lt. C%TFRZ)  .and. &
> !`           (ssnow%tgg(i,k) .lt. ssnow%otgg(i,k))) then
> !`
> !`            ssnow%otgg(i,k) = min(ssnow%otgg(i,k),C%TFRZ)
> !`
> !`            if (ssnow%wb(i,k) .gt. (soil%watr(i,k)+1.0e-6) ) then
> !`               iceF(i,k) = max(zero,min(0.95_r_2,max(zero,ssnow%wbliq(i,k)-soil%watr(i,k))/&
> !`                                 (ssnow%wb(i,k)-soil%watr(i,k))  )  )
> !`            else
> !`              iceF(i,k) = 0._r_2
> !`            end if
> !`            tgg_tmp(i,k) = iceF(i,k)*ssnow%otgg(i,k) + &
> !`                           (1._r_2 - iceF(i,k))*ssnow%tgg(i,k)
> !`
> !`            Aconst =max(0.1,min(0.99_r_2,(ssnow%wb(i,k)-soil%watr(i,k))/(soil%ssat_vec(i,k)-soil%watr(i,k)) ) )
> !`            Dconst = exp(1. - Aconst  )
> !`
> !`            if (tgg_tmp(i,k) .lt. C%TFRZ) then
> !`            max_ice_frac(i,k) = max(zero,ssnow%wb(i,k)*&
> !`                                 (1._r_2 - exp(2._r_2*(tgg_tmp(i,k)-C%TFRZ)*Aconst*Aconst)) / Dconst)
> !`
> !`            else
> !`                max_ice_frac(i,k) = zero
> !`            end if
> !`
> !`            max_ice_frac(i,k) = min(ssnow%wb(i,k)*0.9, max_ice_frac(i,k) )
> !`
> !`            delta_ice_vol(i,k) = max(zero, max_ice_frac(i,k) - ssnow%wbice(i,k) )
> !`
> !`            !check amount of water we have
> !`            delta_ice_vol(i,k) = min(ssnow%wbliq(i,k)*real(C%density_liq/C%density_ice,r_2), delta_ice_vol(i,k) )
> !`
> !`            sicefreeze(i,k) = min(delta_ice_vol(i,k)*soil%zse_vec(i,k)*c%density_ice, &
> !`                                     max(zero,(ssnow%otgg(i,k)-ssnow%tgg(i,k))*ssnow%gammzz(i,k)/C%HLF) )
> !`
> !`      elseif ((ssnow%tgg(i,k) .gt. C%TFRZ) .and. &
> !`              (ssnow%tgg(i,k) .gt. ssnow%otgg(i,k)) .and. &
> !`              ssnow%wbice(i,k) .gt. zero ) then
> !`
> !`            ssnow%otgg(i,k) = min(ssnow%otgg(i,k),C%TFRZ)
> !`
> !`            tgg_tmp(i,k) = C%TFRZ
> !`
> !`            delta_ice_vol(i,k) = ssnow%wbice(i,k)
> !`
> !`            sicemelt(i,k) = min(delta_ice_vol(i,k)*soil%zse_vec(i,k)*c%density_ice, &
> !`                                     max(zero,(ssnow%tgg(i,k)-ssnow%otgg(i,k))*ssnow%gammzz(i,k)/C%HLF))
> !`
> !`      endif
> !`   end do
> !`   end do
> !`
> !`   DO k = 1, ms
> !`   DO i=1,mp
> !`
> !`
> !`      if (sicefreeze(i,k) .gt. zero .and. ssnow%tgg(i,k).lt.c%tfrz .and. &
> !`               ssnow%tgg(i,k).lt.ssnow%otgg(i,k) ) then
> !`
> !`
> !`         ssnow%wbice(i,k) = ssnow%wbice(i,k) +&
> !`                                  sicefreeze(i,k)/soil%zse_vec(i,k)/real(C%density_ice,r_2)
> !`
> !`         delta_wbliq = max(zero,min(ssnow%wbliq(i,k),delta_ice_vol(i,k)*real(C%density_ice/C%density_liq,r_2)))
> !`
> !`         ssnow%gammzz(i,k) = max(soil%heat_cap_lower_limit(i,k),  &
> !`                              (1.0- soil%ssat_vec(i,k))*soil%css_vec(i,k)*soil%rhosoil_vec(i,k) &
> !`                            + (ssnow%wbliq(i,k) - delta_wbliq) * REAL(C%cswat*C%density_liq,r_2)   &
> !`                            + ssnow%wbice(i,k) * REAL(C%csice*C%density_ice,r_2)&
> !`                            )*soil%zse_vec(i,k) + gammzz_snow(i,k)
> !`
> !`         ssnow%tgg(i,k) = ssnow%tgg(i,k) + real(sicefreeze(i,k) )&
> !`                             * C%hlf / real(ssnow%gammzz(i,k) )
> !`
> !`         ssnow%wmice(i,k) = ssnow%wbice(i,k)*soil%zse_vec(i,k)*real(C%density_ice,r_2)
> !`         ssnow%wmliq(i,k) = ssnow%wmtot(i,k) - ssnow%wmice(i,k)
> !`
> !`         ssnow%wbliq(i,k) = ssnow%wmliq(i,k) / (soil%zse_vec(i,k)*m2mm)
> !`         ssnow%wb(i,k)    = ssnow%wbliq(i,k) + den_rat * ssnow%wbice(i,k)
> !`
> !`         elseif (sicemelt(i,k) .gt. zero .and. ssnow%tgg(i,k).gt.c%tfrz &
> !`                .and. ssnow%wbice(i,k) .gt. 0._r_2) then
> !`
> !`         ssnow%wbice(i,k) = ssnow%wbice(i,k)  -  delta_ice_vol(i,k)
> !`
> !`         delta_wbliq = delta_ice_vol(i,k)*real(C%density_ice/C%density_liq,r_2)
> !`
> !`         ssnow%gammzz(i,k) =max(soil%heat_cap_lower_limit(i,k), &
> !`                           (1.0 - soil%ssat_vec(i,k))*soil%css_vec(i,k)*soil%rhosoil_vec(i,k)&
> !`              + (ssnow%wbliq(i,k)+delta_wbliq) * REAL(C%cswat*C%density_liq,r_2)   &
> !`              + ssnow%wbice(i,k) * REAL(C%csice*C%density_ice,r_2)&
> !`                             )*soil%zse_vec(i,k)  + gammzz_snow(i,k)
> !`
> !`         ssnow%tgg(i,k) = ssnow%tgg(i,k) - real(sicemelt(i,k) )&
> !`                             * C%hlf / real(ssnow%gammzz(i,k) )
> !`
> !`         ssnow%wmice(i,k) = ssnow%wbice(i,k)*soil%zse_vec(i,k)*real(C%density_ice,r_2)
> !`         ssnow%wmliq(i,k) = ssnow%wmtot(i,k) - ssnow%wmice(i,k)
> !`
> !`         ssnow%wbliq(i,k) = ssnow%wmliq(i,k) / (soil%zse_vec(i,k)*m2mm)
> !`         ssnow%wb(i,k)    = ssnow%wbliq(i,k) + den_rat * ssnow%wbice(i,k)
> !`
> !`      END IF
> !`
> !`
> !`   END DO
> !`   END DO
> !`
> !`END SUBROUTINE GWsoilfreeze
> 
>   subroutine set_den_rat()
>       den_rat = real(C%density_ice/C%density_liq,r_2)
>   end subroutine set_den_rat
