  SUBROUTINE calc_equilibrium_water_content(ssnow,soil)
    !find layer mean soil moisture and potential at equilibrium with wtd

    IMPLICIT NONE

    TYPE (soil_snow_type), INTENT(INOUT)      :: ssnow ! soil and snow variables
    TYPE (soil_parameter_type), INTENT(INOUT)    :: soil  ! soil parameters
    !local variables
    REAL(r_2), DIMENSION(mp)    :: zaq      !node depth of the aquifer
    REAL(r_2), DIMENSION(ms)    :: dzmm     !layer thickness for single tile
    REAL(r_2), DIMENSION(mp)    :: GWdzmm   !aquifer thickness at each tile
    REAL(r_2), DIMENSION(mp)    :: GWzimm   !aquifer layer interface depth
    REAL(r_2), DIMENSION(0:ms)  :: zimm     !layer interface depth in mm
    REAL(r_2), DIMENSION(ms)    :: zmm      !node depths in mm
    REAL(r_2)                   :: tempi, temp0,voleq1,wbrat
    REAL(r_2), DIMENSION(mp,ms+1) :: ice_correction

    INTEGER :: k,i

    IF (gw_params%ssgw_ice_switch) THEN
       smp_cor = 8.0
    ELSE
       smp_cor = 0.0
    END IF

    !make code cleaner define these here
    dzmm    = 1000.0_r_2 * REAL(soil%zse(:),r_2)
    zimm(0) = 0._r_2

    DO k=1,ms
       zimm(k) = zimm(k-1) + dzmm(k)
       zmm(k)  = zimm(k-1) + 0.5_r_2*dzmm(k)
    END DO

    DO i=1,mp
       GWdzmm(i) = REAL(soil%GWdz(i),r_2)*1000._r_2
       GWzimm(i) = zimm(ms)+GWdzmm(i)
       zaq(i)    = zimm(ms) + 0.5_r_2*GWdzmm(i)
    END DO

    IF (.NOT.gw_params%ssgw_ice_switch) THEN
       ice_correction(:,:) = 1._r_2

    ELSE

       DO k=1,ms
          DO i=1,mp
             ice_correction(i,k)    = 1._r_2 + smp_cor * ssnow%wbice(i,k)
             ice_correction(i,k)    =  ice_correction(i,k)**(2.0/soil%bch_vec(i,k))
          END DO
       END DO
       DO i=1,mp
          ice_correction(i,ms+1)    = 1._r_2 + smp_cor * ssnow%wbice(i,ms)
          ice_correction(i,ms+1)    =  ice_correction(i,ms+1)**(2.0/soil%GWbch_vec(i))
       END DO

    END IF


    !equilibrium water content
    DO k=1,ms
       DO i=1,mp

          IF ((ssnow%wtd(i) .LE. zimm(k-1))) THEN         !fully saturated

             ssnow%wbeq(i,k) = soil%ssat_vec(i,k)

          ELSEIF ((ssnow%wtd(i) .LE. zimm(k)) .AND. &
               (ssnow%wtd(i) .GT. zimm(k-1))) THEN

             tempi = 1._r_2
             temp0 = &
                  (((soil%sucs_vec(i,k)+ssnow%wtd(i)-zimm(k-1))/&
                  soil%sucs_vec(i,k)))**(1._r_2-1._r_2/soil%bch_vec(i,k))
             voleq1 = -soil%sucs_vec(i,k)*(soil%ssat_vec(i,k)-soil%watr(i,k))/&
                  (1._r_2-1._r_2/soil%bch_vec(i,k))/&
                  (ssnow%wtd(i)-zimm(k-1))*(tempi-temp0)
             ssnow%wbeq(i,k) = (voleq1*(ssnow%wtd(i)-zimm(k-1)) +&
                  (soil%ssat_vec(i,k)-soil%watr(i,k))&
                  *(zimm(k)-ssnow%wtd(i)))/(zimm(k)-zimm(k-1))&
                  + soil%watr(i,k)
             ssnow%wbeq(i,k) = ssnow%wbeq(i,k)*ice_correction(i,k)
          ELSE

             tempi = (((soil%sucs_vec(i,k)+ssnow%wtd(i)-zimm(k))/&
                  soil%sucs_vec(i,k)))**(1._r_2-1._r_2/soil%bch_vec(i,k))
             temp0 = (((soil%sucs_vec(i,k)+ssnow%wtd(i)-zimm(k-1))/&
                  soil%sucs_vec(i,k)))**(1._r_2-1._r_2/soil%bch_vec(i,k))
             ssnow%wbeq(i,k) = -soil%sucs_vec(i,k)*(soil%ssat_vec(i,k)-soil%watr(i,k))/&
                  (1._r_2-1._r_2/soil%bch_vec(i,k))/&
                  (zimm(k)-zimm(k-1))*(tempi-temp0)+soil%watr(i,k)
             ssnow%wbeq(i,k) = ssnow%wbeq(i,k)*ice_correction(i,k)
          END IF

          ssnow%wbeq(i,k) = MIN(MAX(ssnow%wbeq(i,k),soil%watr(i,k)),soil%ssat_vec(i,k))

          ssnow%wbeq(i,k) = ssnow%wbeq(i,k)*ice_correction(i,k)

          wbrat = MIN(MAX((&
               ssnow%wbeq(i,k) - soil%watr(i,k))/(soil%ssat_vec(i,k)-soil%watr(i,k)),&
               0.001_r_2),1._r_2)

          ssnow%zq(i,k) = MAX(&
               -soil%sucs_vec(i,k)*(wbrat**(-soil%bch_vec(i,k))),sucmin)

          IF (gw_params%ssgw_ice_switch) THEN
             ssnow%zq(i,k) = MAX(&
                  -soil%sucs_vec(i,k)*(1._r_2+smp_cor*ssnow%wbice(i,k))*(wbrat**(-soil%bch_vec(i,k))),sucmin)
          END IF


       END DO  !mp
    END DO  !ms

    DO i=1,mp
       !Aquifer Equilibrium water content
       IF (ssnow%wtd(i) .LE. zimm(ms)) THEN      !fully saturated

          ssnow%GWwbeq(i) = soil%GWssat_vec(i)-soil%GWwatr(i)

       ELSEIF ((ssnow%wtd(i) .GT. GWzimm(i)))   THEN     !fully unsaturated

          tempi = &
               (((soil%GWsucs_vec(i)+ssnow%wtd(i)-GWzimm(i))/&
               soil%GWsucs_vec(i)))**(1._r_2-1._r_2/soil%GWbch_vec(i))
          temp0 = (((soil%GWsucs_vec(i)+ssnow%wtd(i)-zimm(ms))/&
               soil%GWsucs_vec(i)))**(1._r_2-1._r_2/soil%GWbch_vec(i))
          ssnow%GWwbeq(i) = -soil%GWsucs_vec(i)*soil%GWssat_vec(i)/&
               (1._r_2-1._r_2/soil%GWbch_vec(i))/&
               (GWzimm(i)-zimm(ms))*(tempi-temp0) + soil%GWwatr(i)

       ELSE

          tempi  = 1._r_2
          temp0  = (((soil%GWsucs_vec(i)+ssnow%wtd(i)-zimm(ms))/&
               soil%GWsucs_vec(i)))**(1._r_2-1._r_2/soil%GWbch_vec(i))
          voleq1 = -soil%GWsucs_vec(i)*(soil%GWssat_vec(i)-soil%GWwatr(i))/&
               (1._r_2-1._r_2/soil%GWbch_vec(i))/&
               (ssnow%wtd(i)-zimm(ms))*(tempi-temp0) + soil%GWwatr(i)
          ssnow%GWwbeq(i) = (voleq1*(ssnow%wtd(i)-zimm(ms)) + &
               (soil%GWssat_vec(i)-soil%GWwatr(i))*&
               (GWzimm(i)-ssnow%wtd(i)))/(GWzimm(i)-zimm(ms)) + soil%GWwatr(i)

       END IF

       ssnow%GWwbeq(i) = MIN(MAX(ssnow%GWwbeq(i),soil%GWwatr(i)),soil%GWssat_vec(i))

       ssnow%GWzq(i) = -soil%GWsucs_vec(i)*(MAX((ssnow%GWwbeq(i)-soil%GWwatr(i))/     &
            (soil%GWssat_vec(i)-soil%GWwatr(i)),0.001_r_2))**(-soil%GWbch_vec(i))
       ssnow%GWzq(i) = MAX(sucmin, ssnow%GWzq(i))

    END DO

  END SUBROUTINE calc_equilibrium_water_content